[{"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\index.js":"1","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\App.js":"2","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\index.js":"3","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\LoginForm\\LoginForm.jsx":"4","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\index.js":"5","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Login\\Login.jsx":"6","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Stats\\Stats.jsx":"7","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Header\\Header.jsx":"8","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\providers\\index.js":"9","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\Users.jsx":"10","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Notifier\\Notifier.jsx":"11","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Table\\Table.jsx":"12","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DataBox\\DataBox.jsx":"13","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\hooks\\index.js":"14","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\SearchBox\\SearchBox.jsx":"15","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DeleteBox\\DeleteBox.jsx":"16","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\Articles.jsx":"17","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\hooks\\index.js":"18","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\ImageExercises.jsx":"19","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\hooks\\index.js":"20","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PrivacyPolicy.jsx":"21","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\TermsOfServices.jsx":"22","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Halls\\Halls.jsx":"23","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Halls\\hooks\\index.js":"24","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Products\\Products.jsx":"25","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Products\\hooks\\index.js":"26","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Orders\\Orders.jsx":"27","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Orders\\hooks\\index.js":"28","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Proteins\\Proteins.jsx":"29","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Proteins\\hooks\\index.js":"30","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PaymentMethods\\PaymentMethods.jsx":"31","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PaymentMethods\\hooks\\index.js":"32","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\VideoExercises\\VideoExercises.jsx":"33","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\VideoExercises\\hooks\\index.js":"34"},{"size":455,"mtime":1611858746292,"results":"35","hashOfConfig":"36"},{"size":1897,"mtime":1616523477194,"results":"37","hashOfConfig":"36"},{"size":413,"mtime":1614162623402,"results":"38","hashOfConfig":"36"},{"size":2532,"mtime":1613687883210,"results":"39","hashOfConfig":"36"},{"size":806,"mtime":1616523406250,"results":"40","hashOfConfig":"36"},{"size":376,"mtime":1611836548198,"results":"41","hashOfConfig":"36"},{"size":3468,"mtime":1616540245756,"results":"42","hashOfConfig":"36"},{"size":12342,"mtime":1616159605716,"results":"43","hashOfConfig":"36"},{"size":1871,"mtime":1614429005526,"results":"44","hashOfConfig":"36"},{"size":9335,"mtime":1616523175711,"results":"45","hashOfConfig":"36"},{"size":1022,"mtime":1616540034552,"results":"46","hashOfConfig":"36"},{"size":3415,"mtime":1616523973845,"results":"47","hashOfConfig":"36"},{"size":5125,"mtime":1616530817032,"results":"48","hashOfConfig":"36"},{"size":1968,"mtime":1614277984383,"results":"49","hashOfConfig":"36"},{"size":1060,"mtime":1614159720952,"results":"50","hashOfConfig":"36"},{"size":1448,"mtime":1614418878417,"results":"51","hashOfConfig":"36"},{"size":7193,"mtime":1616536809543,"results":"52","hashOfConfig":"36"},{"size":2204,"mtime":1614428937970,"results":"53","hashOfConfig":"36"},{"size":8138,"mtime":1616540597257,"results":"54","hashOfConfig":"36"},{"size":2409,"mtime":1616540545012,"results":"55","hashOfConfig":"36"},{"size":7656,"mtime":1616159710706,"results":"56","hashOfConfig":"36"},{"size":7663,"mtime":1616159714395,"results":"57","hashOfConfig":"36"},{"size":9593,"mtime":1616539035955,"results":"58","hashOfConfig":"36"},{"size":2803,"mtime":1616273428681,"results":"59","hashOfConfig":"36"},{"size":8937,"mtime":1616540859474,"results":"60","hashOfConfig":"36"},{"size":2176,"mtime":1616540813396,"results":"61","hashOfConfig":"36"},{"size":7392,"mtime":1616539533595,"results":"62","hashOfConfig":"36"},{"size":2162,"mtime":1616276582332,"results":"63","hashOfConfig":"36"},{"size":7183,"mtime":1616539448402,"results":"64","hashOfConfig":"36"},{"size":2204,"mtime":1616276892770,"results":"65","hashOfConfig":"36"},{"size":7005,"mtime":1616540091228,"results":"66","hashOfConfig":"36"},{"size":2418,"mtime":1616539836279,"results":"67","hashOfConfig":"36"},{"size":8050,"mtime":1616537523534,"results":"68","hashOfConfig":"36"},{"size":2419,"mtime":1616537481434,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1afk5ra",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\index.js",[],["150","151"],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\App.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\LoginForm\\LoginForm.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Login\\Login.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Stats\\Stats.jsx",["152"],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Header\\Header.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\providers\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\Users.jsx",["153","154"],"import { useState, useEffect } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useUsersHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Users = () => {\r\n  const { getUsers, deleteUser, addUser, editUser } = useUsersHook();\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [userObj, setUserObj] = useState({\r\n    _id: 0,\r\n    phoneNumber: \"\",\r\n    username: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUsers(await getUsers());\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setUserObj({\r\n        _id: 0,\r\n        phoneNumber: \"\",\r\n        username: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        role: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const user = users.find((u) => u._id === _id);\r\n    delete user.password;\r\n    delete user.passwordConfirm;\r\n    setUserObj(user);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setUserObj(users.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف المستخدم رقم ${userObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteUser(userObj._id)) {\r\n            setUsers(users.filter((u) => u._id !== userObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة مستخدم جديد\",\r\n          onSave: async () => {\r\n            const user = await addUser(userObj);\r\n            if (user) {\r\n              setUsers([...users, user]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"رقم الهاتف\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"رقم الهاتف\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, phoneNumber: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"البريد الالكتروني\",\r\n            props: {\r\n              type: \"email\",\r\n              placeholder: \"البريد الالكتروني\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, email: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم المستخدم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"اسم المستخدم\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, username: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الاسم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"الاسم\",\r\n              onChange: (e) => setUserObj({ ...userObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, password: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"تأكيد كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"تأكيد كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, passwordConfirm: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"select\",\r\n            props: {\r\n              onChange: (e) => setUserObj({ ...userObj, role: e.target.value }),\r\n            },\r\n            options: [\r\n              {\r\n                label: \"المستوي\",\r\n                value: \"\",\r\n              },\r\n              {\r\n                label: \"مدير\",\r\n                value: \"admin\",\r\n              },\r\n              {\r\n                label: \"مستخدم\",\r\n                value: \"user\",\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل المستخدم رقم ${userObj._id}`,\r\n          onSave: async () => {\r\n            const user = await editUser(userObj);\r\n            if (user) {\r\n              setUsers(users.map((u) => (u._id === user._id ? user : u)));\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"رقم الهاتف\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"رقم الهاتف\",\r\n              value: userObj.phoneNumber,\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, phoneNumber: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"البريد الالكتروني\",\r\n            props: {\r\n              type: \"email\",\r\n              placeholder: \"البريد الالكتروني\",\r\n              value: userObj.email,\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, email: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم المستخدم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"اسم المستخدم\",\r\n              value: userObj.username,\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, username: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الاسم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"الاسم\",\r\n              value: userObj.name,\r\n              onChange: (e) => setUserObj({ ...userObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, password: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"تأكيد كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"تأكيد كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, passwordConfirm: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"select\",\r\n            props: {\r\n              value: userObj.role,\r\n              onChange: (e) => setUserObj({ ...userObj, role: e.target.value }),\r\n            },\r\n            options: [\r\n              {\r\n                label: \"المستوي\",\r\n                value: \"\",\r\n              },\r\n              {\r\n                label: \"مدير\",\r\n                value: \"admin\",\r\n              },\r\n              {\r\n                label: \"مستخدم\",\r\n                value: \"user\",\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>المستخدمين</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الاسم\",\r\n              \"البريد الالكتروني\",\r\n              \"اسم المستخدم\",\r\n              \"رقم الهاتف\",\r\n              \"المستوي\",\r\n              \"تاريخ التسجيل\",\r\n            ]}\r\n            data={\r\n              users &&\r\n              users.map((u) => [\r\n                u._id,\r\n                u.name,\r\n                u.email,\r\n                u.username,\r\n                u.phoneNumber,\r\n                u.role,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Notifier\\Notifier.jsx",["155"],"import { useEffect, useRef } from \"react\";\r\nimport { useNotifierContext } from \"../../providers\";\r\n\r\nconst Notifier = () => {\r\n  const { notifiers, setIsNotifierVisible } = useNotifierContext();\r\n\r\n  const alarmsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.onload = (e) => {\r\n      if (alarmsRef.current) {\r\n        alarmsRef.current.style.top = window.pageYOffset + 20 + \"px\";\r\n        window.addEventListener(\"scroll\", (e) => {\r\n          alarmsRef.current.style.top = window.pageYOffset + 20 + \"px\";\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"alarms\" ref={alarmsRef}>\r\n      {notifiers.errors &&\r\n        notifiers.errors.map((err, i) => (\r\n          <div key={i} className=\"alarm alarm-errors\">\r\n            {err}\r\n          </div>\r\n        ))}\r\n      {notifiers.success &&\r\n        notifiers.success.map((suc, i) => (\r\n          <div key={i} className=\"alarm alarm-success\">\r\n            {suc}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifier;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Table\\Table.jsx",["156","157","158","159","160","161","162","163","164"],"import { useEffect, useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Pagination, A11y } from \"swiper\";\r\n\r\n//Style\r\nimport \"./style.scss\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport \"swiper/components/scrollbar/scrollbar.scss\";\r\n\r\n//Assets\r\n//@ts-ignore\r\nimport TrashIcon from \"../../assets/img/trash.svg\";\r\n\r\nSwiperCore.use([Pagination, A11y]);\r\n\r\nconst Table = ({ headers, data, actions }) => {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <div className=\"table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {headers && headers.map((head, i) => <th key={i}>{head}</th>)}\r\n              {actions && <th>الإجراء</th>}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data &&\r\n              data.length !== 0 &&\r\n              data.map((inputs, i) => (\r\n                <tr key={i}>\r\n                  {inputs &&\r\n                    inputs.map((input) => (\r\n                      <td>\r\n                        {input && input.type == \"img\" ? (\r\n                          <img src={input.src} className=\"main-img\" />\r\n                        ) : input && input.type == \"slider\" ? (\r\n                          <Swiper\r\n                            spaceBetween={0}\r\n                            slidesPerView={1}\r\n                            pagination={{ clickable: true }}\r\n                          >\r\n                            {input.images.map((img) => (\r\n                              <SwiperSlide style={{ width: 160 }}>\r\n                                <img src={img} className=\"slider-img\" />\r\n                              </SwiperSlide>\r\n                            ))}\r\n                          </Swiper>\r\n                        ) : input && input.type == \"location\" ? (\r\n                          <button className=\"maps-btn\">عرض الخريطة</button>\r\n                        ) : input && input.type == \"video\" ? (\r\n                          <iframe\r\n                            className=\"video-frame\"\r\n                            src={`http://localhost:5000/play-youtube?videoId=${input.videoId}`}\r\n                          ></iframe>\r\n                        ) : (\r\n                          input\r\n                        )}\r\n                      </td>\r\n                    ))}\r\n                  {actions && (\r\n                    <td className=\"action\">\r\n                      {actions.edit && (\r\n                        <button\r\n                          onClick={() => actions.edit(inputs[0])}\r\n                          className=\"btn-edit\"\r\n                        >\r\n                          تعديل\r\n                        </button>\r\n                      )}\r\n                      {actions.delete && (\r\n                        <img\r\n                          onClick={() => actions.delete(inputs[0])}\r\n                          src={TrashIcon}\r\n                          alt=\"حذف\"\r\n                          title=\"حذف\"\r\n                        />\r\n                      )}\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"pagination\" data-update-function=\"searchForUsers\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DataBox\\DataBox.jsx",["165","166","167","168","169","170","171"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Pagination, A11y } from \"swiper\";\r\n\r\n//Style\r\nimport \"./style.scss\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport \"swiper/components/scrollbar/scrollbar.scss\";\r\n\r\nSwiperCore.use([Pagination, A11y]);\r\n\r\nconst DataBox = ({ options, inputs, visible, setVisible }) => {\r\n  const dataBoxRef = useRef(null);\r\n  const inputFileRef = useRef(null);\r\n\r\n  const [dataUrls, setDataUrls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (options.images) bufferToImage({ images: options.images });\r\n\r\n    window.addEventListener(\"mouseup\", containerHandler);\r\n  }, []);\r\n\r\n  const containerHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (dataBoxRef.current && !dataBoxRef.current.contains(e.target)) {\r\n      setVisible(false);\r\n      setDataUrls([]);\r\n    }\r\n  };\r\n\r\n  const bufferToImage = async ({ images = [] }) => {\r\n    if (images.length != 0) {\r\n      for (let i = 0; i < images.length; i++) {\r\n        let blob = await fetch(images[i]).then((r) => r.blob());\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(blob);\r\n        reader.onload = () => {\r\n          setDataUrls([...dataUrls, reader.result]);\r\n          inputFileRef.current &&\r\n            inputFileRef.current.files.append(reader.result);\r\n        };\r\n      }\r\n    }\r\n\r\n    if (inputFileRef.current)\r\n      for (let i = 0; i < inputFileRef.current.files.length; i++) {\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(inputFileRef.current.files[i]);\r\n        reader.onload = () => {\r\n          setDataUrls([...dataUrls, reader.result]);\r\n        };\r\n      }\r\n  };\r\n\r\n  return (\r\n    visible && (\r\n      <div className=\"float-box-container\">\r\n        <div className=\"data-box\" ref={dataBoxRef}>\r\n          <div className=\"closing\" onClick={() => setVisible(false)}>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n          <form\r\n            method=\"POST\"\r\n            onSubmit={(e) => e.preventDefault()}\r\n            ref={options.formRef}\r\n          >\r\n            {options.title && <h3>{options.title}</h3>}\r\n            <div className=\"input-items\">\r\n              {inputs.length !== 0 &&\r\n                inputs.map((input, i) =>\r\n                  input.tag === \"input\" ? (\r\n                    <>\r\n                      <div className=\"input-item\">\r\n                        {input.label && <label>{input.label}</label>}\r\n                        <input\r\n                          {...input.props}\r\n                          ref={input.props.type == \"file\" ? inputFileRef : null}\r\n                          onChange={\r\n                            input.props.type == \"file\"\r\n                              ? bufferToImage\r\n                              : input.props.onChange\r\n                          }\r\n                        />\r\n                      </div>\r\n                      {input.props.type == \"file\" && dataUrls.length != 0 && (\r\n                        <div className=\"input-item\">\r\n                          <Swiper\r\n                            spaceBetween={0}\r\n                            slidesPerView={1}\r\n                            pagination={{ clickable: true }}\r\n                          >\r\n                            {dataUrls.map((url, i) => (\r\n                              <SwiperSlide>\r\n                                <img className=\"slider-img\" key={i} src={url} />\r\n                              </SwiperSlide>\r\n                            ))}\r\n                          </Swiper>\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  ) : input.tag === \"select\" ? (\r\n                    <div className=\"select-item\">\r\n                      <select {...input.props}>\r\n                        {input.options.map((option) => (\r\n                          <option value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                      <span></span>\r\n                    </div>\r\n                  ) : input.tag === \"textarea\" ? (\r\n                    <div\r\n                      className=\"input-item\"\r\n                      style={{ alignItems: \"flex-start\" }}\r\n                    >\r\n                      {input.label && <label>{input.label}</label>}\r\n\r\n                      <textarea\r\n                        {...input.props}\r\n                        style={{ height: 250, minWidth: \"auto\" }}\r\n                      ></textarea>\r\n                    </div>\r\n                  ) : null\r\n                )}\r\n              <div className=\"input-item\">\r\n                <button\r\n                  className=\"save-btn\"\r\n                  type=\"submit\"\r\n                  onClick={options.onSave}\r\n                >\r\n                  {options.btnSave || \"حفظ\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nexport default DataBox;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\SearchBox\\SearchBox.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DeleteBox\\DeleteBox.jsx",["172"],"import { useRef, useEffect } from \"react\";\r\n\r\n//Style\r\nimport \"./style.scss\";\r\n\r\nconst DeleteBox = ({ visible, setVisible, title, onDelete }) => {\r\n  const deleteBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", containerHandler);\r\n  }, []);\r\n\r\n  const containerHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (deleteBoxRef.current && !deleteBoxRef.current.contains(e.target)) {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    visible && (\r\n      <div className=\"float-box-container\">\r\n        <div className=\"delete-box\" ref={deleteBoxRef}>\r\n          <div className=\"closing\" onClick={() => setVisible(false)}>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n          <form method=\"POST\" onSubmit={(e) => e.preventDefault()}>\r\n            <input type=\"hidden\" name=\"id\" />\r\n            <h3>{title}</h3>\r\n            <div className=\"input-items\">\r\n              <div className=\"input-item\">\r\n                <button className=\"delete-btn\" type=\"submit\" onClick={onDelete}>\r\n                  حذف\r\n                </button>\r\n              </div>\r\n              <div className=\"input-item\">\r\n                <button className=\"abort-btn\" onClick={() => setVisible(false)}>\r\n                  الغاء\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default DeleteBox;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\Articles.jsx",["173","174"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useArticlesHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Articles = () => {\r\n  const {\r\n    getArticles,\r\n    deleteArticle,\r\n    addArticle,\r\n    editArticle,\r\n  } = useArticlesHook();\r\n\r\n  const [articles, setArticles] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [articleObj, setArticleObj] = useState({\r\n    _id: 0,\r\n    title: \"\",\r\n    content: \"\",\r\n    mainImage: \"\",\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getArticles();\r\n\r\n      if (result) {\r\n        setArticles(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setArticleObj({\r\n        _id: 0,\r\n        title: \"\",\r\n        content: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const article = articles.find((u) => u._id === _id);\r\n    setArticleObj(article);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setArticleObj(articles.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف المقالة رقم ${articleObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteArticle(articleObj._id)) {\r\n            setArticles(articles.filter((u) => u._id !== articleObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة مقال جديد\",\r\n          onSave: async () => {\r\n            const article = await addArticle(addFormRef);\r\n            if (article) {\r\n              setArticles([...articles, article]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"title\",\r\n              maxLength: 100,\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, content: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"mainImage\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, mainImage: e.target.files[0] }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل المقال رقم ${articleObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editArticle(editFormRef);\r\n            if (result) {\r\n              setArticles(\r\n                articles.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n          images: [articleObj.mainImage],\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: articleObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: articleObj.title,\r\n              name: \"title\",\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: articleObj.content,\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, content: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              onChange: (e) =>\r\n                setArticleObj({\r\n                  ...articleObj,\r\n                  mainImage: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>المقالات</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الصورة المصغرة\",\r\n              \"عنوان المقال\",\r\n              \"محتوي المقال\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              articles &&\r\n              articles.map((u) => [\r\n                u._id,\r\n                { type: \"img\", src: u.mainImage },\r\n                u.title,\r\n                u.content,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\ImageExercises.jsx",["175","176"],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PrivacyPolicy.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\TermsOfServices.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Halls\\Halls.jsx",["177","178"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useHallsHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Halls = () => {\r\n  const { getHalls, deleteHall, addHall, editHall } = useHallsHook();\r\n\r\n  const [halls, setHalls] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [hallObj, setHallObj] = useState({\r\n    _id: 0,\r\n    name: \"\",\r\n    city: \"\",\r\n    brief: \"\",\r\n    subscriptions: \"\",\r\n    images: [],\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getHalls();\r\n\r\n      if (result) {\r\n        setHalls(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setHallObj({\r\n        _id: 0,\r\n        name: \"\",\r\n        city: \"\",\r\n        brief: \"\",\r\n        subscriptions: \"\",\r\n        images: [],\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const hall = halls.find((u) => u._id === _id);\r\n    setHallObj(hall);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setHallObj(halls.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف القاعة رقم ${hallObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteHall(hallObj._id)) {\r\n            setHalls(halls.filter((u) => u._id !== hallObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة قاعة جديد\",\r\n          onSave: async () => {\r\n            const hall = await addHall(addFormRef);\r\n            if (hall) {\r\n              setHalls([...halls, hall]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم القاعة\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"name\",\r\n              maxLength: 100,\r\n              placeholder: \"اسم القاعة\",\r\n              required: true,\r\n              defaultValue: hallObj.name,\r\n              onChange: (e) =>\r\n                setHallObj({\r\n                  ...hallObj,\r\n                  name: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"المدينة\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"city\",\r\n              maxLength: 100,\r\n              placeholder: \"المدينة\",\r\n              required: true,\r\n              defaultValue: hallObj.city,\r\n\r\n              onChange: (e) =>\r\n                setHallObj({\r\n                  ...hallObj,\r\n                  city: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"وصف القاعة\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"brief\",\r\n              placeholder: \"وصف القاعة\",\r\n              required: true,\r\n              defaultValue: hallObj.brief,\r\n\r\n              onChange: (e) =>\r\n                setHallObj({\r\n                  ...hallObj,\r\n                  brief: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"الاشتراكات\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"subscriptions\",\r\n              placeholder: \"مثال:\\n 150,شهري\\n1200,سنوي\",\r\n              required: true,\r\n              defaultValue: hallObj.subscriptions,\r\n              onChange: (e) =>\r\n                setHallObj({\r\n                  ...hallObj,\r\n                  subscriptions: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصور\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"images\",\r\n              placeholder: \"الصور\",\r\n              multiple: true,\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setHallObj({\r\n                  ...hallObj,\r\n                  images: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل القاعة رقم ${hallObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editHall(editFormRef);\r\n            if (result) {\r\n              setHalls(halls.map((u) => (u._id === result._id ? result : u)));\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم القاعة\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"name\",\r\n              maxLength: 100,\r\n              placeholder: \"اسم القاعة\",\r\n              required: true,\r\n              defaultValue: hallObj.name,\r\n              onChange: (e) =>\r\n                setHallObj({\r\n                  ...hallObj,\r\n                  name: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"المدينة\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"city\",\r\n              maxLength: 100,\r\n              placeholder: \"المدينة\",\r\n              required: true,\r\n              defaultValue: hallObj.city,\r\n\r\n              onChange: (e) =>\r\n                setHallObj({\r\n                  ...hallObj,\r\n                  city: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"وصف القاعة\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"brief\",\r\n              placeholder: \"وصف القاعة\",\r\n              required: true,\r\n              defaultValue: hallObj.brief,\r\n\r\n              onChange: (e) =>\r\n                setHallObj({\r\n                  ...hallObj,\r\n                  brief: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"الاشتراكات\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"subscriptions\",\r\n              placeholder: \"مثال:\\n 150,شهري\\n1200,سنوي\",\r\n              required: true,\r\n              defaultValue:\r\n                hallObj.subscriptions &&\r\n                hallObj.subscriptions.map(\r\n                  (item) => item.price + \",\" + item.name + \"\\n\"\r\n                ),\r\n              onChange: (e) =>\r\n                setHallObj({\r\n                  ...hallObj,\r\n                  // subscriptions: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصور\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"images\",\r\n              placeholder: \"الصور\",\r\n              multiple: true,\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setHallObj({\r\n                  ...hallObj,\r\n                  images: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>تمارين رياضية (صور)</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"اسم القاعة\",\r\n              \"الصور\",\r\n              \"وصف القاعة\",\r\n              \"المدينة\",\r\n              \"المكان\",\r\n              \"الاشتراكات\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              halls &&\r\n              halls.map((u) => [\r\n                u._id,\r\n                u.name,\r\n                { type: \"slider\", images: u.images },\r\n                u.brief,\r\n                u.city,\r\n                { type: \"location\", location: u.location },\r\n                `${u.subscriptions.map((s) => s.price + \" \" + s.name)}`,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Halls;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Halls\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Products\\Products.jsx",["179","180"],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Products\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Orders\\Orders.jsx",["181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useOrdersHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Orders = () => {\r\n  const { getOrders, deleteOrder, addOrder, editOrder } = useOrdersHook();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [orderObj, setOrderObj] = useState({\r\n    _id: 0,\r\n    title: \"\",\r\n    content: \"\",\r\n    mainImage: \"\",\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getOrders();\r\n\r\n      if (result) {\r\n        setOrders(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setOrderObj({\r\n        _id: 0,\r\n        title: \"\",\r\n        content: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const order = orders.find((u) => u._id === _id);\r\n    setOrderObj(order);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setOrderObj(orders.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف المقالة رقم ${orderObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteOrder(orderObj._id)) {\r\n            setOrders(orders.filter((u) => u._id !== orderObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      /> */}\r\n      {/* <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة مقال جديد\",\r\n          onSave: async () => {\r\n            const order = await addOrder(addFormRef);\r\n            if (order) {\r\n              setOrders([...orders, order]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"title\",\r\n              maxLength: 100,\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setOrderObj({ ...orderObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setOrderObj({ ...orderObj, content: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"mainImage\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setOrderObj({ ...orderObj, mainImage: e.target.files[0] }),\r\n            },\r\n          },\r\n        ]}\r\n      /> */}\r\n      {/* <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل المستخدم رقم ${orderObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editOrder(editFormRef);\r\n            if (result) {\r\n              setOrders(orders.map((u) => (u._id === result._id ? result : u)));\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: orderObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: orderObj.title,\r\n              name: \"title\",\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setOrderObj({ ...orderObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: orderObj.content,\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setOrderObj({ ...orderObj, content: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              onChange: (e) =>\r\n                setOrderObj({\r\n                  ...orderObj,\r\n                  mainImage: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      /> */}\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>طلبات الشراء</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          {/* <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div> */}\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"المشتري\",\r\n              \"المنتج\",\r\n              \"وسيلة الدفع\",\r\n              \"حالة الدفع\",\r\n              \"صورة تأكيد الدفع\",\r\n              \"تاريخ الطلب\",\r\n            ]}\r\n            data={\r\n              orders &&\r\n              orders.map((u) => [\r\n                u._id,\r\n                u.userId,\r\n                u.productId,\r\n                u.paymentMethodId,\r\n                u.statusId == 1\r\n                  ? \"لم يتم الدفع\"\r\n                  : u.statusId == 2\r\n                  ? \"تم الدفع\"\r\n                  : u.statusId == 3\r\n                  ? \"ملغي\"\r\n                  : \"غير معروف\",\r\n                { type: \"img\", src: u.paymentImage },\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Orders\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Proteins\\Proteins.jsx",["197","198"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useProteinsHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Proteins = () => {\r\n  const {\r\n    getProteins,\r\n    deleteProtein,\r\n    addProtein,\r\n    editProtein,\r\n  } = useProteinsHook();\r\n\r\n  const [proteins, setProteins] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [proteinObj, setProteinObj] = useState({\r\n    _id: 0,\r\n    name: \"\",\r\n    description: \"\",\r\n    mainImage: \"\",\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getProteins();\r\n\r\n      if (result) {\r\n        setProteins(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setProteinObj({\r\n        _id: 0,\r\n        name: \"\",\r\n        description: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const protein = proteins.find((u) => u._id === _id);\r\n    setProteinObj(protein);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setProteinObj(proteins.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        name={`حذف البروتينة رقم ${proteinObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteProtein(proteinObj._id)) {\r\n            setProteins(proteins.filter((u) => u._id !== proteinObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          name: \"اضافة مقال جديد\",\r\n          onSave: async () => {\r\n            const protein = await addProtein(addFormRef);\r\n            if (protein) {\r\n              setProteins([...proteins, protein]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم البروتين\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"name\",\r\n              maxLength: 100,\r\n              placeholder: \"اسم البروتين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setProteinObj({ ...proteinObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"وصف البروتين\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"description\",\r\n              placeholder: \"وصف البروتين\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setProteinObj({ ...proteinObj, description: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"mainImage\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setProteinObj({ ...proteinObj, mainImage: e.target.files[0] }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          name: `تعديل المستخدم رقم ${proteinObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editProtein(editFormRef);\r\n            if (result) {\r\n              setProteins(\r\n                proteins.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: proteinObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم البروتين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: proteinObj.name,\r\n              name: \"name\",\r\n              placeholder: \"اسم البروتين\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setProteinObj({ ...proteinObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"وصف البروتين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: proteinObj.description,\r\n              name: \"description\",\r\n              placeholder: \"وصف البروتين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setProteinObj({ ...proteinObj, description: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              onChange: (e) =>\r\n                setProteinObj({\r\n                  ...proteinObj,\r\n                  mainImage: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>البروتينات</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الصورة المصغرة\",\r\n              \"اسم البروتين\",\r\n              \"وصف البروتين\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              proteins &&\r\n              proteins.map((u) => [\r\n                u._id,\r\n                { type: \"img\", src: u.mainImage },\r\n                u.name,\r\n                u.description,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Proteins;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Proteins\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PaymentMethods\\PaymentMethods.jsx",["199","200"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport usePaymentMethodsHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst PaymentMethods = () => {\r\n  const {\r\n    getPaymentMethods,\r\n    deletePaymentMethod,\r\n    addPaymentMethod,\r\n    editPaymentMethod,\r\n  } = usePaymentMethodsHook();\r\n\r\n  const [paymentMethods, setPaymentMethods] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [paymentMethodObj, setPaymentMethodObj] = useState({\r\n    _id: 0,\r\n    name: \"\",\r\n    description: \"\",\r\n    mainImage: \"\",\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getPaymentMethods();\r\n\r\n      if (result) {\r\n        setPaymentMethods(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setPaymentMethodObj({\r\n        _id: 0,\r\n        name: \"\",\r\n        description: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const paymentMethod = paymentMethods.find((u) => u._id === _id);\r\n    setPaymentMethodObj(paymentMethod);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setPaymentMethodObj(paymentMethods.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف وسيلة الدفع رقم ${paymentMethodObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deletePaymentMethod(paymentMethodObj._id)) {\r\n            setPaymentMethods(\r\n              paymentMethods.filter((u) => u._id !== paymentMethodObj._id)\r\n            );\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة وسيلة دفع جديد\",\r\n          onSave: async () => {\r\n            const paymentMethod = await addPaymentMethod(addFormRef);\r\n            if (paymentMethod) {\r\n              setPaymentMethods([...paymentMethods, paymentMethod]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم وسيلة دفع\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"name\",\r\n              maxLength: 100,\r\n              placeholder: \"اسم وسيلة دفع\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setPaymentMethodObj({\r\n                  ...paymentMethodObj,\r\n                  name: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"خطوات الدفع\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"description\",\r\n              placeholder: \"خطوات الدفع\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setPaymentMethodObj({\r\n                  ...paymentMethodObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          name: `تعديل المستخدم رقم ${paymentMethodObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editPaymentMethod(editFormRef);\r\n            if (result) {\r\n              setPaymentMethods(\r\n                paymentMethods.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: paymentMethodObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم وسيلة دفع\",\r\n            props: {\r\n              type: \"text\",\r\n              value: paymentMethodObj.name,\r\n              name: \"name\",\r\n              placeholder: \"اسم وسيلة دفع\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setPaymentMethodObj({\r\n                  ...paymentMethodObj,\r\n                  name: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"خطوات الدفع\",\r\n            props: {\r\n              type: \"text\",\r\n              value: paymentMethodObj.description,\r\n              name: \"description\",\r\n              placeholder: \"خطوات الدفع\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setPaymentMethodObj({\r\n                  ...paymentMethodObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              onChange: (e) =>\r\n                setPaymentMethodObj({\r\n                  ...paymentMethodObj,\r\n                  mainImage: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>اليلة دفعات</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\"#\", \"اسم وسيلة الدفع\", \"خطوات الدفع\"]}\r\n            data={\r\n              paymentMethods &&\r\n              paymentMethods.map((u) => [u._id, u.name, u.description])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentMethods;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PaymentMethods\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\VideoExercises\\VideoExercises.jsx",["201","202"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useVideoExercisesHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst VideoExercises = () => {\r\n  const {\r\n    getVideoExercises,\r\n    deleteVideoExercise,\r\n    addVideoExercise,\r\n    editVideoExercise,\r\n  } = useVideoExercisesHook();\r\n\r\n  const [videoExercises, setVideoExercises] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [videoExerciseObj, setVideoExerciseObj] = useState({\r\n    _id: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    videos: [],\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getVideoExercises();\r\n\r\n      if (result) {\r\n        setVideoExercises(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setVideoExerciseObj({\r\n        _id: 0,\r\n        title: \"\",\r\n        description: \"\",\r\n        videos: [],\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const videoExercise = videoExercises.find((u) => u._id === _id);\r\n    setVideoExerciseObj(videoExercise);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setVideoExerciseObj(videoExercises.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف التمرين رقم ${videoExerciseObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteVideoExercise(videoExerciseObj._id)) {\r\n            setVideoExercises(\r\n              videoExercises.filter((u) => u._id !== videoExerciseObj._id)\r\n            );\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة تمرين جديد\",\r\n          onSave: async () => {\r\n            const videoExercise = await addVideoExercise(addFormRef);\r\n            if (videoExercise) {\r\n              setVideoExercises([...videoExercises, videoExercise]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان التمرين\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"title\",\r\n              maxLength: 100,\r\n              placeholder: \"عنوان التمرين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  title: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"description\",\r\n              placeholder: \"محتوي التمرين\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الفيديو\",\r\n            props: {\r\n              name: \"videoId\",\r\n              placeholder: \"قم بنسخ رقم تعريف الفيديو\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  videos: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              name: \"type\",\r\n              type: \"hidden\",\r\n              value: 2,\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل التمرين رقم ${videoExerciseObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editVideoExercise(editFormRef);\r\n            if (result) {\r\n              setVideoExercises(\r\n                videoExercises.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: videoExerciseObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: videoExerciseObj.title,\r\n              name: \"title\",\r\n              placeholder: \"عنوان التمرين\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  title: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: videoExerciseObj.description,\r\n              name: \"description\",\r\n              placeholder: \"محتوي التمرين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الفيديو\",\r\n            props: {\r\n              name: \"videoId\",\r\n              placeholder: \"قم بنسخ رقم تعريف الفيديو\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  videos: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              name: \"type\",\r\n              type: \"hidden\",\r\n              value: 2,\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>تمارين رياضية (صور)</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الفيديو\",\r\n              \"العنوان\",\r\n              \"محتوي التمرينة\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              videoExercises &&\r\n              videoExercises.map((u) => [\r\n                u._id,\r\n                { type: \"video\", videoId: u.videoId },\r\n                u.title,\r\n                u.description,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoExercises;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\VideoExercises\\hooks\\index.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":26,"column":6,"nodeType":"209","endLine":26,"endColumn":8,"suggestions":"210"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"207","severity":1,"message":"215","line":33,"column":6,"nodeType":"209","endLine":33,"endColumn":8,"suggestions":"216"},{"ruleId":"211","severity":1,"message":"217","line":5,"column":22,"nodeType":"213","messageId":"214","endLine":5,"endColumn":42},{"ruleId":"211","severity":1,"message":"218","line":1,"column":10,"nodeType":"213","messageId":"214","endLine":1,"endColumn":19},{"ruleId":"211","severity":1,"message":"219","line":1,"column":21,"nodeType":"213","messageId":"214","endLine":1,"endColumn":29},{"ruleId":"220","severity":1,"message":"221","line":37,"column":46,"nodeType":"222","messageId":"223","endLine":37,"endColumn":48},{"ruleId":"224","severity":1,"message":"225","line":38,"column":27,"nodeType":"226","endLine":38,"endColumn":71},{"ruleId":"220","severity":1,"message":"221","line":39,"column":49,"nodeType":"222","messageId":"223","endLine":39,"endColumn":51},{"ruleId":"224","severity":1,"message":"225","line":47,"column":33,"nodeType":"226","endLine":47,"endColumn":73},{"ruleId":"220","severity":1,"message":"221","line":51,"column":49,"nodeType":"222","messageId":"223","endLine":51,"endColumn":51},{"ruleId":"220","severity":1,"message":"221","line":53,"column":49,"nodeType":"222","messageId":"223","endLine":53,"endColumn":51},{"ruleId":"227","severity":1,"message":"228","line":54,"column":27,"nodeType":"226","endLine":57,"endColumn":28},{"ruleId":"207","severity":1,"message":"229","line":24,"column":6,"nodeType":"209","endLine":24,"endColumn":8,"suggestions":"230"},{"ruleId":"220","severity":1,"message":"231","line":36,"column":23,"nodeType":"222","messageId":"223","endLine":36,"endColumn":25},{"ruleId":"220","severity":1,"message":"221","line":82,"column":49,"nodeType":"222","messageId":"223","endLine":82,"endColumn":51},{"ruleId":"220","severity":1,"message":"221","line":84,"column":46,"nodeType":"222","messageId":"223","endLine":84,"endColumn":48},{"ruleId":"220","severity":1,"message":"221","line":90,"column":41,"nodeType":"222","messageId":"223","endLine":90,"endColumn":43},{"ruleId":"220","severity":1,"message":"231","line":90,"column":70,"nodeType":"222","messageId":"223","endLine":90,"endColumn":72},{"ruleId":"224","severity":1,"message":"225","line":99,"column":33,"nodeType":"226","endLine":99,"endColumn":81},{"ruleId":"207","severity":1,"message":"232","line":11,"column":6,"nodeType":"209","endLine":11,"endColumn":8,"suggestions":"233"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"207","severity":1,"message":"234","line":42,"column":6,"nodeType":"209","endLine":42,"endColumn":8,"suggestions":"235"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"207","severity":1,"message":"236","line":42,"column":6,"nodeType":"209","endLine":42,"endColumn":8,"suggestions":"237"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"207","severity":1,"message":"238","line":39,"column":6,"nodeType":"209","endLine":39,"endColumn":8,"suggestions":"239"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"207","severity":1,"message":"240","line":44,"column":6,"nodeType":"209","endLine":44,"endColumn":8,"suggestions":"241"},{"ruleId":"211","severity":1,"message":"242","line":2,"column":17,"nodeType":"213","messageId":"214","endLine":2,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"211","severity":1,"message":"243","line":2,"column":37,"nodeType":"213","messageId":"214","endLine":2,"endColumn":46},{"ruleId":"211","severity":1,"message":"244","line":11,"column":22,"nodeType":"213","messageId":"214","endLine":11,"endColumn":33},{"ruleId":"211","severity":1,"message":"245","line":11,"column":35,"nodeType":"213","messageId":"214","endLine":11,"endColumn":43},{"ruleId":"211","severity":1,"message":"246","line":11,"column":45,"nodeType":"213","messageId":"214","endLine":11,"endColumn":54},{"ruleId":"211","severity":1,"message":"247","line":14,"column":25,"nodeType":"213","messageId":"214","endLine":14,"endColumn":41},{"ruleId":"211","severity":1,"message":"248","line":15,"column":10,"nodeType":"213","messageId":"214","endLine":15,"endColumn":24},{"ruleId":"211","severity":1,"message":"249","line":16,"column":10,"nodeType":"213","messageId":"214","endLine":16,"endColumn":26},{"ruleId":"211","severity":1,"message":"250","line":18,"column":10,"nodeType":"213","messageId":"214","endLine":18,"endColumn":18},{"ruleId":"211","severity":1,"message":"251","line":26,"column":9,"nodeType":"213","messageId":"214","endLine":26,"endColumn":19},{"ruleId":"211","severity":1,"message":"252","line":27,"column":9,"nodeType":"213","messageId":"214","endLine":27,"endColumn":20},{"ruleId":"207","severity":1,"message":"253","line":37,"column":6,"nodeType":"209","endLine":37,"endColumn":8,"suggestions":"254"},{"ruleId":"220","severity":1,"message":"221","line":237,"column":28,"nodeType":"222","messageId":"223","endLine":237,"endColumn":30},{"ruleId":"220","severity":1,"message":"221","line":239,"column":32,"nodeType":"222","messageId":"223","endLine":239,"endColumn":34},{"ruleId":"220","severity":1,"message":"221","line":241,"column":32,"nodeType":"222","messageId":"223","endLine":241,"endColumn":34},{"ruleId":"211","severity":1,"message":"212","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"207","severity":1,"message":"255","line":42,"column":6,"nodeType":"209","endLine":42,"endColumn":8,"suggestions":"256"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"207","severity":1,"message":"257","line":42,"column":6,"nodeType":"209","endLine":42,"endColumn":8,"suggestions":"258"},{"ruleId":"211","severity":1,"message":"212","line":2,"column":26,"nodeType":"213","messageId":"214","endLine":2,"endColumn":35},{"ruleId":"207","severity":1,"message":"259","line":42,"column":6,"nodeType":"209","endLine":42,"endColumn":8,"suggestions":"260"},"no-native-reassign",["261"],"no-negated-in-lhs",["262"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.","ArrayExpression",["263"],"no-unused-vars","'SearchBox' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["264"],"'setIsNotifierVisible' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has missing dependencies: 'bufferToImage', 'containerHandler', and 'options.images'. Either include them or remove the dependency array.",["265"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'containerHandler'. Either include it or remove the dependency array.",["266"],"React Hook useEffect has a missing dependency: 'getArticles'. Either include it or remove the dependency array.",["267"],"React Hook useEffect has a missing dependency: 'getImageExercises'. Either include it or remove the dependency array.",["268"],"React Hook useEffect has a missing dependency: 'getHalls'. Either include it or remove the dependency array.",["269"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["270"],"'DataBox' is defined but never used.","'DeleteBox' is defined but never used.","'deleteOrder' is assigned a value but never used.","'addOrder' is assigned a value but never used.","'editOrder' is assigned a value but never used.","'setAddBoxVisible' is assigned a value but never used.","'editBoxVisible' is assigned a value but never used.","'deleteBoxVisible' is assigned a value but never used.","'orderObj' is assigned a value but never used.","'addFormRef' is assigned a value but never used.","'editFormRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has a missing dependency: 'getProteins'. Either include it or remove the dependency array.",["272"],"React Hook useEffect has a missing dependency: 'getPaymentMethods'. Either include it or remove the dependency array.",["273"],"React Hook useEffect has a missing dependency: 'getVideoExercises'. Either include it or remove the dependency array.",["274"],"no-global-assign","no-unsafe-negation",{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},"Update the dependencies array to be: [getStats]",{"range":"299","text":"300"},"Update the dependencies array to be: [getUsers]",{"range":"301","text":"302"},"Update the dependencies array to be: [bufferToImage, containerHandler, options.images]",{"range":"303","text":"304"},"Update the dependencies array to be: [containerHandler]",{"range":"305","text":"306"},"Update the dependencies array to be: [getArticles]",{"range":"307","text":"308"},"Update the dependencies array to be: [getImageExercises]",{"range":"309","text":"310"},"Update the dependencies array to be: [getHalls]",{"range":"311","text":"312"},"Update the dependencies array to be: [getProducts]",{"range":"313","text":"314"},"Update the dependencies array to be: [getOrders]",{"range":"315","text":"316"},"Update the dependencies array to be: [getProteins]",{"range":"317","text":"318"},"Update the dependencies array to be: [getPaymentMethods]",{"range":"319","text":"320"},"Update the dependencies array to be: [getVideoExercises]",{"range":"321","text":"322"},[521,523],"[getStats]",[837,839],"[getUsers]",[782,784],"[bufferToImage, containerHandler, options.images]",[273,275],"[containerHandler]",[990,992],"[getArticles]",[1069,1071],"[getImageExercises]",[960,962],"[getHalls]",[1031,1033],"[getProducts]",[940,942],"[getOrders]",[993,995],"[getProteins]",[1071,1073],"[getPaymentMethods]",[1069,1071],"[getVideoExercises]"]