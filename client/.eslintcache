[{"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\index.js":"1","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\App.js":"2","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\index.js":"3","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\LoginForm\\LoginForm.jsx":"4","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\index.js":"5","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Login\\Login.jsx":"6","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Stats\\Stats.jsx":"7","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Header\\Header.jsx":"8","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\providers\\index.js":"9","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\Users.jsx":"10","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Notifier\\Notifier.jsx":"11","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Table\\Table.jsx":"12","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DataBox\\DataBox.jsx":"13","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\hooks\\index.js":"14","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\SearchBox\\SearchBox.jsx":"15","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DeleteBox\\DeleteBox.jsx":"16","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\Articles.jsx":"17","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\hooks\\index.js":"18","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\ImageExercises.jsx":"19","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\hooks\\index.js":"20","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PrivacyPolicy.jsx":"21","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\TermsOfServices.jsx":"22","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Halls\\Halls.jsx":"23","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Halls\\hooks\\index.js":"24","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Products\\Products.jsx":"25","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Products\\hooks\\index.js":"26","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Orders\\Orders.jsx":"27","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Orders\\hooks\\index.js":"28","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Proteins\\Proteins.jsx":"29","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Proteins\\hooks\\index.js":"30","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PaymentMethods\\PaymentMethods.jsx":"31","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PaymentMethods\\hooks\\index.js":"32","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\VideoExercises\\VideoExercises.jsx":"33","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\VideoExercises\\hooks\\index.js":"34","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\MapBox\\MapBox.jsx":"35"},{"size":455,"mtime":1611858746292,"results":"36","hashOfConfig":"37"},{"size":1897,"mtime":1616523477194,"results":"38","hashOfConfig":"37"},{"size":467,"mtime":1616845996348,"results":"39","hashOfConfig":"37"},{"size":2532,"mtime":1613687883210,"results":"40","hashOfConfig":"37"},{"size":806,"mtime":1616523406250,"results":"41","hashOfConfig":"37"},{"size":376,"mtime":1611836548198,"results":"42","hashOfConfig":"37"},{"size":3468,"mtime":1616540245756,"results":"43","hashOfConfig":"37"},{"size":12342,"mtime":1616159605716,"results":"44","hashOfConfig":"37"},{"size":1871,"mtime":1614429005526,"results":"45","hashOfConfig":"37"},{"size":9335,"mtime":1616523175711,"results":"46","hashOfConfig":"37"},{"size":1022,"mtime":1616540034552,"results":"47","hashOfConfig":"37"},{"size":3600,"mtime":1616849523365,"results":"48","hashOfConfig":"37"},{"size":6278,"mtime":1616862742046,"results":"49","hashOfConfig":"37"},{"size":1968,"mtime":1614277984383,"results":"50","hashOfConfig":"37"},{"size":1060,"mtime":1614159720952,"results":"51","hashOfConfig":"37"},{"size":1448,"mtime":1614418878417,"results":"52","hashOfConfig":"37"},{"size":7193,"mtime":1616536809543,"results":"53","hashOfConfig":"37"},{"size":2204,"mtime":1614428937970,"results":"54","hashOfConfig":"37"},{"size":8138,"mtime":1616540597257,"results":"55","hashOfConfig":"37"},{"size":2409,"mtime":1616540545012,"results":"56","hashOfConfig":"37"},{"size":7656,"mtime":1616159710706,"results":"57","hashOfConfig":"37"},{"size":7663,"mtime":1616159714395,"results":"58","hashOfConfig":"37"},{"size":12046,"mtime":1616862839784,"results":"59","hashOfConfig":"37"},{"size":2803,"mtime":1616273428681,"results":"60","hashOfConfig":"37"},{"size":8937,"mtime":1616540859474,"results":"61","hashOfConfig":"37"},{"size":2176,"mtime":1616540813396,"results":"62","hashOfConfig":"37"},{"size":7392,"mtime":1616539533595,"results":"63","hashOfConfig":"37"},{"size":2162,"mtime":1616276582332,"results":"64","hashOfConfig":"37"},{"size":7183,"mtime":1616539448402,"results":"65","hashOfConfig":"37"},{"size":2204,"mtime":1616276892770,"results":"66","hashOfConfig":"37"},{"size":7005,"mtime":1616540091228,"results":"67","hashOfConfig":"37"},{"size":2418,"mtime":1616539836279,"results":"68","hashOfConfig":"37"},{"size":8050,"mtime":1616537523534,"results":"69","hashOfConfig":"37"},{"size":2419,"mtime":1616537481434,"results":"70","hashOfConfig":"37"},{"size":1113,"mtime":1616862952402,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1afk5ra",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"74"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"74"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"74"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\index.js",[],["154","155"],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\App.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\LoginForm\\LoginForm.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Login\\Login.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Stats\\Stats.jsx",["156"],"import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNotifierContext } from \"../../providers\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Stats = () => {\r\n  const { setNotifiers } = useNotifierContext();\r\n\r\n  const [stats, setStats] = useState({\r\n    halls: 0,\r\n    articles: 0,\r\n    imageExercises: 0,\r\n    videoExercises: 0,\r\n    products: 0,\r\n    orders: 0,\r\n    users: 0,\r\n    proteins: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getStats();\r\n    })();\r\n  }, []);\r\n\r\n  const getStats = async () => {\r\n    try {\r\n      let response = await axios.post(\"/api/stats/all\");\r\n      let data = await response.data;\r\n\r\n      if (!data.status) {\r\n        setNotifiers({ errors: data.errors });\r\n      }\r\n\r\n      setStats({ ...stats, ...data.stats });\r\n    } catch (e) {\r\n      alert(e.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <Header /> */}\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>الإحصائيات</h6>\r\n        </div>\r\n\r\n        <div className=\"stats\">\r\n          <div className=\"head\">\r\n            <h3>الإحصائيات</h3>\r\n          </div>\r\n          <div className=\"boxs\">\r\n            <div className=\"stats-box\">\r\n              <div className=\"item\">\r\n                <div className=\"num\">{stats.users}</div>\r\n                <div className=\"title\">المستخدمين</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stats-box\">\r\n              <div className=\"item\">\r\n                <div className=\"num\">{stats.articles}</div>\r\n                <div className=\"title\">المقالات</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stats-box\">\r\n              <div className=\"item\">\r\n                <div className=\"num\">{stats.videoExercises}</div>\r\n                <div className=\"title\">التمارين الجاهزة (فيديو)</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stats-box\">\r\n              <div className=\"item\">\r\n                <div className=\"num\">{stats.imageExercises}</div>\r\n                <div className=\"title\">التمارين الرياضية (صور)</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stats-box\">\r\n              <div className=\"item\">\r\n                <div className=\"num\">{stats.proteins}</div>\r\n                <div className=\"title\">المكملات الغذائية</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stats-box\">\r\n              <div className=\"item\">\r\n                <div className=\"num\">{stats.halls}</div>\r\n                <div className=\"title\">الصالات الرياضية</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stats-box\">\r\n              <div className=\"item\">\r\n                <div className=\"num\">{stats.orders}</div>\r\n                <div className=\"title\">الطلبات</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"stats-box\">\r\n              <div className=\"item\">\r\n                <div className=\"num\">{stats.products}</div>\r\n                <div className=\"title\">المنتجات</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <span className=\"line\"></span> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Header\\Header.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\providers\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\Users.jsx",["157","158"],"import { useState, useEffect } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useUsersHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Users = () => {\r\n  const { getUsers, deleteUser, addUser, editUser } = useUsersHook();\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [userObj, setUserObj] = useState({\r\n    _id: 0,\r\n    phoneNumber: \"\",\r\n    username: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUsers(await getUsers());\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setUserObj({\r\n        _id: 0,\r\n        phoneNumber: \"\",\r\n        username: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        role: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const user = users.find((u) => u._id === _id);\r\n    delete user.password;\r\n    delete user.passwordConfirm;\r\n    setUserObj(user);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setUserObj(users.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف المستخدم رقم ${userObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteUser(userObj._id)) {\r\n            setUsers(users.filter((u) => u._id !== userObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة مستخدم جديد\",\r\n          onSave: async () => {\r\n            const user = await addUser(userObj);\r\n            if (user) {\r\n              setUsers([...users, user]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"رقم الهاتف\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"رقم الهاتف\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, phoneNumber: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"البريد الالكتروني\",\r\n            props: {\r\n              type: \"email\",\r\n              placeholder: \"البريد الالكتروني\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, email: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم المستخدم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"اسم المستخدم\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, username: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الاسم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"الاسم\",\r\n              onChange: (e) => setUserObj({ ...userObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, password: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"تأكيد كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"تأكيد كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, passwordConfirm: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"select\",\r\n            props: {\r\n              onChange: (e) => setUserObj({ ...userObj, role: e.target.value }),\r\n            },\r\n            options: [\r\n              {\r\n                label: \"المستوي\",\r\n                value: \"\",\r\n              },\r\n              {\r\n                label: \"مدير\",\r\n                value: \"admin\",\r\n              },\r\n              {\r\n                label: \"مستخدم\",\r\n                value: \"user\",\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل المستخدم رقم ${userObj._id}`,\r\n          onSave: async () => {\r\n            const user = await editUser(userObj);\r\n            if (user) {\r\n              setUsers(users.map((u) => (u._id === user._id ? user : u)));\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"رقم الهاتف\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"رقم الهاتف\",\r\n              value: userObj.phoneNumber,\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, phoneNumber: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"البريد الالكتروني\",\r\n            props: {\r\n              type: \"email\",\r\n              placeholder: \"البريد الالكتروني\",\r\n              value: userObj.email,\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, email: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم المستخدم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"اسم المستخدم\",\r\n              value: userObj.username,\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, username: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الاسم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"الاسم\",\r\n              value: userObj.name,\r\n              onChange: (e) => setUserObj({ ...userObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, password: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"تأكيد كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"تأكيد كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, passwordConfirm: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"select\",\r\n            props: {\r\n              value: userObj.role,\r\n              onChange: (e) => setUserObj({ ...userObj, role: e.target.value }),\r\n            },\r\n            options: [\r\n              {\r\n                label: \"المستوي\",\r\n                value: \"\",\r\n              },\r\n              {\r\n                label: \"مدير\",\r\n                value: \"admin\",\r\n              },\r\n              {\r\n                label: \"مستخدم\",\r\n                value: \"user\",\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>المستخدمين</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الاسم\",\r\n              \"البريد الالكتروني\",\r\n              \"اسم المستخدم\",\r\n              \"رقم الهاتف\",\r\n              \"المستوي\",\r\n              \"تاريخ التسجيل\",\r\n            ]}\r\n            data={\r\n              users &&\r\n              users.map((u) => [\r\n                u._id,\r\n                u.name,\r\n                u.email,\r\n                u.username,\r\n                u.phoneNumber,\r\n                u.role,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Notifier\\Notifier.jsx",["159"],"import { useEffect, useRef } from \"react\";\r\nimport { useNotifierContext } from \"../../providers\";\r\n\r\nconst Notifier = () => {\r\n  const { notifiers, setIsNotifierVisible } = useNotifierContext();\r\n\r\n  const alarmsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.onload = (e) => {\r\n      if (alarmsRef.current) {\r\n        alarmsRef.current.style.top = window.pageYOffset + 20 + \"px\";\r\n        window.addEventListener(\"scroll\", (e) => {\r\n          alarmsRef.current.style.top = window.pageYOffset + 20 + \"px\";\r\n        });\r\n      }\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"alarms\" ref={alarmsRef}>\r\n      {notifiers.errors &&\r\n        notifiers.errors.map((err, i) => (\r\n          <div key={i} className=\"alarm alarm-errors\">\r\n            {err}\r\n          </div>\r\n        ))}\r\n      {notifiers.success &&\r\n        notifiers.success.map((suc, i) => (\r\n          <div key={i} className=\"alarm alarm-success\">\r\n            {suc}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifier;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Table\\Table.jsx",["160","161","162","163","164","165","166","167","168"],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DataBox\\DataBox.jsx",["169","170","171","172","173","174","175","176","177"],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\SearchBox\\SearchBox.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DeleteBox\\DeleteBox.jsx",["178"],"import { useRef, useEffect } from \"react\";\r\n\r\n//Style\r\nimport \"./style.scss\";\r\n\r\nconst DeleteBox = ({ visible, setVisible, title, onDelete }) => {\r\n  const deleteBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", containerHandler);\r\n  }, []);\r\n\r\n  const containerHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (deleteBoxRef.current && !deleteBoxRef.current.contains(e.target)) {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    visible && (\r\n      <div className=\"float-box-container\">\r\n        <div className=\"delete-box\" ref={deleteBoxRef}>\r\n          <div className=\"closing\" onClick={() => setVisible(false)}>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n          <form method=\"POST\" onSubmit={(e) => e.preventDefault()}>\r\n            <input type=\"hidden\" name=\"id\" />\r\n            <h3>{title}</h3>\r\n            <div className=\"input-items\">\r\n              <div className=\"input-item\">\r\n                <button className=\"delete-btn\" type=\"submit\" onClick={onDelete}>\r\n                  حذف\r\n                </button>\r\n              </div>\r\n              <div className=\"input-item\">\r\n                <button className=\"abort-btn\" onClick={() => setVisible(false)}>\r\n                  الغاء\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default DeleteBox;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\Articles.jsx",["179","180"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useArticlesHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Articles = () => {\r\n  const {\r\n    getArticles,\r\n    deleteArticle,\r\n    addArticle,\r\n    editArticle,\r\n  } = useArticlesHook();\r\n\r\n  const [articles, setArticles] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [articleObj, setArticleObj] = useState({\r\n    _id: 0,\r\n    title: \"\",\r\n    content: \"\",\r\n    mainImage: \"\",\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getArticles();\r\n\r\n      if (result) {\r\n        setArticles(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setArticleObj({\r\n        _id: 0,\r\n        title: \"\",\r\n        content: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const article = articles.find((u) => u._id === _id);\r\n    setArticleObj(article);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setArticleObj(articles.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف المقالة رقم ${articleObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteArticle(articleObj._id)) {\r\n            setArticles(articles.filter((u) => u._id !== articleObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة مقال جديد\",\r\n          onSave: async () => {\r\n            const article = await addArticle(addFormRef);\r\n            if (article) {\r\n              setArticles([...articles, article]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"title\",\r\n              maxLength: 100,\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, content: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"mainImage\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, mainImage: e.target.files[0] }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل المقال رقم ${articleObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editArticle(editFormRef);\r\n            if (result) {\r\n              setArticles(\r\n                articles.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n          images: [articleObj.mainImage],\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: articleObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: articleObj.title,\r\n              name: \"title\",\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: articleObj.content,\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, content: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              onChange: (e) =>\r\n                setArticleObj({\r\n                  ...articleObj,\r\n                  mainImage: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>المقالات</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الصورة المصغرة\",\r\n              \"عنوان المقال\",\r\n              \"محتوي المقال\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              articles &&\r\n              articles.map((u) => [\r\n                u._id,\r\n                { type: \"img\", src: u.mainImage },\r\n                u.title,\r\n                u.content,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\ImageExercises.jsx",["181","182"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useImageExercisesHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst ImageExercises = () => {\r\n  const {\r\n    getImageExercises,\r\n    deleteImageExercise,\r\n    addImageExercise,\r\n    editImageExercise,\r\n  } = useImageExercisesHook();\r\n\r\n  const [imageExercises, setImageExercises] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [imageExerciseObj, setImageExerciseObj] = useState({\r\n    _id: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    images: [],\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getImageExercises();\r\n\r\n      if (result) {\r\n        setImageExercises(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setImageExerciseObj({\r\n        _id: 0,\r\n        title: \"\",\r\n        description: \"\",\r\n        images: [],\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const imageExercise = imageExercises.find((u) => u._id === _id);\r\n    setImageExerciseObj(imageExercise);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setImageExerciseObj(imageExercises.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف التمرين رقم ${imageExerciseObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteImageExercise(imageExerciseObj._id)) {\r\n            setImageExercises(\r\n              imageExercises.filter((u) => u._id !== imageExerciseObj._id)\r\n            );\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة تمرين جديد\",\r\n          onSave: async () => {\r\n            const imageExercise = await addImageExercise(addFormRef);\r\n            if (imageExercise) {\r\n              setImageExercises([...imageExercises, imageExercise]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان التمرين\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"title\",\r\n              maxLength: 100,\r\n              placeholder: \"عنوان التمرين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  title: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"description\",\r\n              placeholder: \"محتوي التمرين\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصور\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"images\",\r\n              placeholder: \"الصور\",\r\n              multiple: true,\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  images: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              name: \"type\",\r\n              type: \"hidden\",\r\n              value: 1,\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل التمرين رقم ${imageExerciseObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editImageExercise(editFormRef);\r\n            if (result) {\r\n              setImageExercises(\r\n                imageExercises.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: imageExerciseObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: imageExerciseObj.title,\r\n              name: \"title\",\r\n              placeholder: \"عنوان التمرين\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  title: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: imageExerciseObj.description,\r\n              name: \"description\",\r\n              placeholder: \"محتوي التمرين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصور\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              multiple: true,\r\n              placeholder: \"الصور\",\r\n              name: \"images\",\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  images: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              name: \"type\",\r\n              type: \"hidden\",\r\n              value: 1,\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>تمارين رياضية (صور)</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الصور\",\r\n              \"العنوان\",\r\n              \"محتوي التمرينة\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              imageExercises &&\r\n              imageExercises.map((u) => [\r\n                u._id,\r\n                { type: \"slider\", images: u.images },\r\n                u.title,\r\n                u.description,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageExercises;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PrivacyPolicy.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\TermsOfServices.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Halls\\Halls.jsx",["183","184"],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Halls\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Products\\Products.jsx",["185","186"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useProductsHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Products = () => {\r\n  const {\r\n    getProducts,\r\n    deleteProduct,\r\n    addProduct,\r\n    editProduct,\r\n  } = useProductsHook();\r\n\r\n  const [products, setProducts] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [productObj, setProductObj] = useState({\r\n    _id: 0,\r\n    title: \"\",\r\n    price: \"\",\r\n    description: \"\",\r\n    coachBrief: \"\",\r\n    mainImage: \"\",\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getProducts();\r\n\r\n      if (result) {\r\n        setProducts(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setProductObj({\r\n        _id: 0,\r\n        title: \"\",\r\n        price: \"\",\r\n        description: \"\",\r\n        coachBrief: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const product = products.find((u) => u._id === _id);\r\n    setProductObj(product);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setProductObj(products.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف المنتج رقم ${productObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteProduct(productObj._id)) {\r\n            setProducts(products.filter((u) => u._id !== productObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة منتج جديد\",\r\n          onSave: async () => {\r\n            const product = await addProduct(addFormRef);\r\n            if (product) {\r\n              setProducts([...products, product]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المنتج\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"title\",\r\n              maxLength: 100,\r\n              placeholder: \"عنوان المنتج\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setProductObj({ ...productObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"وصف المنتج\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"description\",\r\n              placeholder: \"وصف المنتج\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setProductObj({ ...productObj, description: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"السعر\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"price\",\r\n              placeholder: \"السعر\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setProductObj({ ...productObj, price: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"نبذة عن الكوتش\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"cocoachBriefntent\",\r\n              placeholder: \"نبذة عن الكوتش\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setProductObj({ ...productObj, coachBrief: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"mainImage\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setProductObj({ ...productObj, mainImage: e.target.files[0] }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل المستخدم رقم ${productObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editProduct(editFormRef);\r\n            if (result) {\r\n              setProducts(\r\n                products.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: productObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المنتج\",\r\n            props: {\r\n              type: \"text\",\r\n              value: productObj.title,\r\n              name: \"title\",\r\n              placeholder: \"عنوان المنتج\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setProductObj({ ...productObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"وصف المنتج\",\r\n            props: {\r\n              type: \"text\",\r\n              value: productObj.description,\r\n              name: \"description\",\r\n              placeholder: \"وصف المنتج\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setProductObj({ ...productObj, description: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"السعر\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"price\",\r\n              placeholder: \"السعر\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setProductObj({ ...productObj, price: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"نبذة عن الكوتش\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"cocoachBriefntent\",\r\n              placeholder: \"نبذة عن الكوتش\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setProductObj({ ...productObj, coachBrief: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              onChange: (e) =>\r\n                setProductObj({\r\n                  ...productObj,\r\n                  mainImage: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>المنتجات</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/* <SearchBox /> */}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"صورة المنتج\",\r\n              \"اسم المنتج\",\r\n              \"وصف المنتج\",\r\n              \"نبذة عن الكوتش\",\r\n              \"السعر\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              products &&\r\n              products.map((u) => [\r\n                u._id,\r\n                { type: \"img\", src: u.mainImage },\r\n                u.title,\r\n                u.description,\r\n                u.coachBrief,\r\n                u.price,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Products\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Orders\\Orders.jsx",["187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useOrdersHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Orders = () => {\r\n  const { getOrders, deleteOrder, addOrder, editOrder } = useOrdersHook();\r\n\r\n  const [orders, setOrders] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [orderObj, setOrderObj] = useState({\r\n    _id: 0,\r\n    title: \"\",\r\n    content: \"\",\r\n    mainImage: \"\",\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getOrders();\r\n\r\n      if (result) {\r\n        setOrders(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setOrderObj({\r\n        _id: 0,\r\n        title: \"\",\r\n        content: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const order = orders.find((u) => u._id === _id);\r\n    setOrderObj(order);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setOrderObj(orders.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف المقالة رقم ${orderObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteOrder(orderObj._id)) {\r\n            setOrders(orders.filter((u) => u._id !== orderObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      /> */}\r\n      {/* <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة مقال جديد\",\r\n          onSave: async () => {\r\n            const order = await addOrder(addFormRef);\r\n            if (order) {\r\n              setOrders([...orders, order]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"title\",\r\n              maxLength: 100,\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setOrderObj({ ...orderObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setOrderObj({ ...orderObj, content: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"mainImage\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setOrderObj({ ...orderObj, mainImage: e.target.files[0] }),\r\n            },\r\n          },\r\n        ]}\r\n      /> */}\r\n      {/* <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل المستخدم رقم ${orderObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editOrder(editFormRef);\r\n            if (result) {\r\n              setOrders(orders.map((u) => (u._id === result._id ? result : u)));\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: orderObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: orderObj.title,\r\n              name: \"title\",\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setOrderObj({ ...orderObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: orderObj.content,\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setOrderObj({ ...orderObj, content: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              onChange: (e) =>\r\n                setOrderObj({\r\n                  ...orderObj,\r\n                  mainImage: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      /> */}\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>طلبات الشراء</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          {/* <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div> */}\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"المشتري\",\r\n              \"المنتج\",\r\n              \"وسيلة الدفع\",\r\n              \"حالة الدفع\",\r\n              \"صورة تأكيد الدفع\",\r\n              \"تاريخ الطلب\",\r\n            ]}\r\n            data={\r\n              orders &&\r\n              orders.map((u) => [\r\n                u._id,\r\n                u.userId,\r\n                u.productId,\r\n                u.paymentMethodId,\r\n                u.statusId == 1\r\n                  ? \"لم يتم الدفع\"\r\n                  : u.statusId == 2\r\n                  ? \"تم الدفع\"\r\n                  : u.statusId == 3\r\n                  ? \"ملغي\"\r\n                  : \"غير معروف\",\r\n                { type: \"img\", src: u.paymentImage },\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Orders\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Proteins\\Proteins.jsx",["203","204"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useProteinsHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Proteins = () => {\r\n  const {\r\n    getProteins,\r\n    deleteProtein,\r\n    addProtein,\r\n    editProtein,\r\n  } = useProteinsHook();\r\n\r\n  const [proteins, setProteins] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [proteinObj, setProteinObj] = useState({\r\n    _id: 0,\r\n    name: \"\",\r\n    description: \"\",\r\n    mainImage: \"\",\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getProteins();\r\n\r\n      if (result) {\r\n        setProteins(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setProteinObj({\r\n        _id: 0,\r\n        name: \"\",\r\n        description: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const protein = proteins.find((u) => u._id === _id);\r\n    setProteinObj(protein);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setProteinObj(proteins.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        name={`حذف البروتينة رقم ${proteinObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteProtein(proteinObj._id)) {\r\n            setProteins(proteins.filter((u) => u._id !== proteinObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          name: \"اضافة مقال جديد\",\r\n          onSave: async () => {\r\n            const protein = await addProtein(addFormRef);\r\n            if (protein) {\r\n              setProteins([...proteins, protein]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم البروتين\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"name\",\r\n              maxLength: 100,\r\n              placeholder: \"اسم البروتين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setProteinObj({ ...proteinObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"وصف البروتين\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"description\",\r\n              placeholder: \"وصف البروتين\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setProteinObj({ ...proteinObj, description: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"mainImage\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setProteinObj({ ...proteinObj, mainImage: e.target.files[0] }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          name: `تعديل المستخدم رقم ${proteinObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editProtein(editFormRef);\r\n            if (result) {\r\n              setProteins(\r\n                proteins.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: proteinObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم البروتين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: proteinObj.name,\r\n              name: \"name\",\r\n              placeholder: \"اسم البروتين\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setProteinObj({ ...proteinObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"وصف البروتين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: proteinObj.description,\r\n              name: \"description\",\r\n              placeholder: \"وصف البروتين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setProteinObj({ ...proteinObj, description: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              onChange: (e) =>\r\n                setProteinObj({\r\n                  ...proteinObj,\r\n                  mainImage: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>البروتينات</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الصورة المصغرة\",\r\n              \"اسم البروتين\",\r\n              \"وصف البروتين\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              proteins &&\r\n              proteins.map((u) => [\r\n                u._id,\r\n                { type: \"img\", src: u.mainImage },\r\n                u.name,\r\n                u.description,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Proteins;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Proteins\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PaymentMethods\\PaymentMethods.jsx",["205","206"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport usePaymentMethodsHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst PaymentMethods = () => {\r\n  const {\r\n    getPaymentMethods,\r\n    deletePaymentMethod,\r\n    addPaymentMethod,\r\n    editPaymentMethod,\r\n  } = usePaymentMethodsHook();\r\n\r\n  const [paymentMethods, setPaymentMethods] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [paymentMethodObj, setPaymentMethodObj] = useState({\r\n    _id: 0,\r\n    name: \"\",\r\n    description: \"\",\r\n    mainImage: \"\",\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getPaymentMethods();\r\n\r\n      if (result) {\r\n        setPaymentMethods(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setPaymentMethodObj({\r\n        _id: 0,\r\n        name: \"\",\r\n        description: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const paymentMethod = paymentMethods.find((u) => u._id === _id);\r\n    setPaymentMethodObj(paymentMethod);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setPaymentMethodObj(paymentMethods.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف وسيلة الدفع رقم ${paymentMethodObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deletePaymentMethod(paymentMethodObj._id)) {\r\n            setPaymentMethods(\r\n              paymentMethods.filter((u) => u._id !== paymentMethodObj._id)\r\n            );\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة وسيلة دفع جديد\",\r\n          onSave: async () => {\r\n            const paymentMethod = await addPaymentMethod(addFormRef);\r\n            if (paymentMethod) {\r\n              setPaymentMethods([...paymentMethods, paymentMethod]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم وسيلة دفع\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"name\",\r\n              maxLength: 100,\r\n              placeholder: \"اسم وسيلة دفع\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setPaymentMethodObj({\r\n                  ...paymentMethodObj,\r\n                  name: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"خطوات الدفع\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"description\",\r\n              placeholder: \"خطوات الدفع\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setPaymentMethodObj({\r\n                  ...paymentMethodObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          name: `تعديل المستخدم رقم ${paymentMethodObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editPaymentMethod(editFormRef);\r\n            if (result) {\r\n              setPaymentMethods(\r\n                paymentMethods.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: paymentMethodObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم وسيلة دفع\",\r\n            props: {\r\n              type: \"text\",\r\n              value: paymentMethodObj.name,\r\n              name: \"name\",\r\n              placeholder: \"اسم وسيلة دفع\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setPaymentMethodObj({\r\n                  ...paymentMethodObj,\r\n                  name: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"خطوات الدفع\",\r\n            props: {\r\n              type: \"text\",\r\n              value: paymentMethodObj.description,\r\n              name: \"description\",\r\n              placeholder: \"خطوات الدفع\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setPaymentMethodObj({\r\n                  ...paymentMethodObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              onChange: (e) =>\r\n                setPaymentMethodObj({\r\n                  ...paymentMethodObj,\r\n                  mainImage: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>اليلة دفعات</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\"#\", \"اسم وسيلة الدفع\", \"خطوات الدفع\"]}\r\n            data={\r\n              paymentMethods &&\r\n              paymentMethods.map((u) => [u._id, u.name, u.description])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentMethods;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PaymentMethods\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\VideoExercises\\VideoExercises.jsx",["207","208"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useVideoExercisesHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst VideoExercises = () => {\r\n  const {\r\n    getVideoExercises,\r\n    deleteVideoExercise,\r\n    addVideoExercise,\r\n    editVideoExercise,\r\n  } = useVideoExercisesHook();\r\n\r\n  const [videoExercises, setVideoExercises] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [videoExerciseObj, setVideoExerciseObj] = useState({\r\n    _id: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    videos: [],\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getVideoExercises();\r\n\r\n      if (result) {\r\n        setVideoExercises(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setVideoExerciseObj({\r\n        _id: 0,\r\n        title: \"\",\r\n        description: \"\",\r\n        videos: [],\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const videoExercise = videoExercises.find((u) => u._id === _id);\r\n    setVideoExerciseObj(videoExercise);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setVideoExerciseObj(videoExercises.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف التمرين رقم ${videoExerciseObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteVideoExercise(videoExerciseObj._id)) {\r\n            setVideoExercises(\r\n              videoExercises.filter((u) => u._id !== videoExerciseObj._id)\r\n            );\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة تمرين جديد\",\r\n          onSave: async () => {\r\n            const videoExercise = await addVideoExercise(addFormRef);\r\n            if (videoExercise) {\r\n              setVideoExercises([...videoExercises, videoExercise]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان التمرين\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"title\",\r\n              maxLength: 100,\r\n              placeholder: \"عنوان التمرين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  title: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"description\",\r\n              placeholder: \"محتوي التمرين\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الفيديو\",\r\n            props: {\r\n              name: \"videoId\",\r\n              placeholder: \"قم بنسخ رقم تعريف الفيديو\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  videos: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              name: \"type\",\r\n              type: \"hidden\",\r\n              value: 2,\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل التمرين رقم ${videoExerciseObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editVideoExercise(editFormRef);\r\n            if (result) {\r\n              setVideoExercises(\r\n                videoExercises.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: videoExerciseObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: videoExerciseObj.title,\r\n              name: \"title\",\r\n              placeholder: \"عنوان التمرين\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  title: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: videoExerciseObj.description,\r\n              name: \"description\",\r\n              placeholder: \"محتوي التمرين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الفيديو\",\r\n            props: {\r\n              name: \"videoId\",\r\n              placeholder: \"قم بنسخ رقم تعريف الفيديو\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setVideoExerciseObj({\r\n                  ...videoExerciseObj,\r\n                  videos: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              name: \"type\",\r\n              type: \"hidden\",\r\n              value: 2,\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>تمارين رياضية (صور)</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          {/*<SearchBox />*/}\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الفيديو\",\r\n              \"العنوان\",\r\n              \"محتوي التمرينة\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              videoExercises &&\r\n              videoExercises.map((u) => [\r\n                u._id,\r\n                { type: \"video\", videoId: u.videoId },\r\n                u.title,\r\n                u.description,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VideoExercises;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\VideoExercises\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\MapBox\\MapBox.jsx",["209","210"],{"ruleId":"211","replacedBy":"212"},{"ruleId":"213","replacedBy":"214"},{"ruleId":"215","severity":1,"message":"216","line":26,"column":6,"nodeType":"217","endLine":26,"endColumn":8,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":2,"column":26,"nodeType":"221","messageId":"222","endLine":2,"endColumn":35},{"ruleId":"215","severity":1,"message":"223","line":33,"column":6,"nodeType":"217","endLine":33,"endColumn":8,"suggestions":"224"},{"ruleId":"219","severity":1,"message":"225","line":5,"column":22,"nodeType":"221","messageId":"222","endLine":5,"endColumn":42},{"ruleId":"219","severity":1,"message":"226","line":1,"column":10,"nodeType":"221","messageId":"222","endLine":1,"endColumn":19},{"ruleId":"219","severity":1,"message":"227","line":1,"column":21,"nodeType":"221","messageId":"222","endLine":1,"endColumn":29},{"ruleId":"228","severity":1,"message":"229","line":37,"column":46,"nodeType":"230","messageId":"231","endLine":37,"endColumn":48},{"ruleId":"232","severity":1,"message":"233","line":38,"column":27,"nodeType":"234","endLine":38,"endColumn":71},{"ruleId":"228","severity":1,"message":"229","line":39,"column":49,"nodeType":"230","messageId":"231","endLine":39,"endColumn":51},{"ruleId":"232","severity":1,"message":"233","line":47,"column":33,"nodeType":"234","endLine":47,"endColumn":73},{"ruleId":"228","severity":1,"message":"229","line":51,"column":49,"nodeType":"230","messageId":"231","endLine":51,"endColumn":51},{"ruleId":"228","severity":1,"message":"229","line":58,"column":49,"nodeType":"230","messageId":"231","endLine":58,"endColumn":51},{"ruleId":"235","severity":1,"message":"236","line":59,"column":27,"nodeType":"234","endLine":62,"endColumn":28},{"ruleId":"215","severity":1,"message":"237","line":29,"column":6,"nodeType":"217","endLine":29,"endColumn":8,"suggestions":"238"},{"ruleId":"228","severity":1,"message":"239","line":41,"column":23,"nodeType":"230","messageId":"231","endLine":41,"endColumn":25},{"ruleId":"228","severity":1,"message":"229","line":87,"column":49,"nodeType":"230","messageId":"231","endLine":87,"endColumn":51},{"ruleId":"228","severity":1,"message":"229","line":89,"column":46,"nodeType":"230","messageId":"231","endLine":89,"endColumn":48},{"ruleId":"228","severity":1,"message":"229","line":95,"column":41,"nodeType":"230","messageId":"231","endLine":95,"endColumn":43},{"ruleId":"228","severity":1,"message":"239","line":95,"column":70,"nodeType":"230","messageId":"231","endLine":95,"endColumn":72},{"ruleId":"232","severity":1,"message":"233","line":104,"column":33,"nodeType":"234","endLine":104,"endColumn":81},{"ruleId":"228","severity":1,"message":"229","line":132,"column":33,"nodeType":"230","messageId":"231","endLine":132,"endColumn":35},{"ruleId":"232","severity":1,"message":"233","line":147,"column":25,"nodeType":"234","endLine":152,"endColumn":27},{"ruleId":"215","severity":1,"message":"240","line":11,"column":6,"nodeType":"217","endLine":11,"endColumn":8,"suggestions":"241"},{"ruleId":"219","severity":1,"message":"220","line":2,"column":26,"nodeType":"221","messageId":"222","endLine":2,"endColumn":35},{"ruleId":"215","severity":1,"message":"242","line":42,"column":6,"nodeType":"217","endLine":42,"endColumn":8,"suggestions":"243"},{"ruleId":"219","severity":1,"message":"220","line":2,"column":26,"nodeType":"221","messageId":"222","endLine":2,"endColumn":35},{"ruleId":"215","severity":1,"message":"244","line":42,"column":6,"nodeType":"217","endLine":42,"endColumn":8,"suggestions":"245"},{"ruleId":"219","severity":1,"message":"220","line":2,"column":26,"nodeType":"221","messageId":"222","endLine":2,"endColumn":35},{"ruleId":"215","severity":1,"message":"246","line":41,"column":6,"nodeType":"217","endLine":41,"endColumn":8,"suggestions":"247"},{"ruleId":"219","severity":1,"message":"220","line":2,"column":26,"nodeType":"221","messageId":"222","endLine":2,"endColumn":35},{"ruleId":"215","severity":1,"message":"248","line":44,"column":6,"nodeType":"217","endLine":44,"endColumn":8,"suggestions":"249"},{"ruleId":"219","severity":1,"message":"250","line":2,"column":17,"nodeType":"221","messageId":"222","endLine":2,"endColumn":24},{"ruleId":"219","severity":1,"message":"220","line":2,"column":26,"nodeType":"221","messageId":"222","endLine":2,"endColumn":35},{"ruleId":"219","severity":1,"message":"251","line":2,"column":37,"nodeType":"221","messageId":"222","endLine":2,"endColumn":46},{"ruleId":"219","severity":1,"message":"252","line":11,"column":22,"nodeType":"221","messageId":"222","endLine":11,"endColumn":33},{"ruleId":"219","severity":1,"message":"253","line":11,"column":35,"nodeType":"221","messageId":"222","endLine":11,"endColumn":43},{"ruleId":"219","severity":1,"message":"254","line":11,"column":45,"nodeType":"221","messageId":"222","endLine":11,"endColumn":54},{"ruleId":"219","severity":1,"message":"255","line":14,"column":25,"nodeType":"221","messageId":"222","endLine":14,"endColumn":41},{"ruleId":"219","severity":1,"message":"256","line":15,"column":10,"nodeType":"221","messageId":"222","endLine":15,"endColumn":24},{"ruleId":"219","severity":1,"message":"257","line":16,"column":10,"nodeType":"221","messageId":"222","endLine":16,"endColumn":26},{"ruleId":"219","severity":1,"message":"258","line":18,"column":10,"nodeType":"221","messageId":"222","endLine":18,"endColumn":18},{"ruleId":"219","severity":1,"message":"259","line":26,"column":9,"nodeType":"221","messageId":"222","endLine":26,"endColumn":19},{"ruleId":"219","severity":1,"message":"260","line":27,"column":9,"nodeType":"221","messageId":"222","endLine":27,"endColumn":20},{"ruleId":"215","severity":1,"message":"261","line":37,"column":6,"nodeType":"217","endLine":37,"endColumn":8,"suggestions":"262"},{"ruleId":"228","severity":1,"message":"229","line":237,"column":28,"nodeType":"230","messageId":"231","endLine":237,"endColumn":30},{"ruleId":"228","severity":1,"message":"229","line":239,"column":32,"nodeType":"230","messageId":"231","endLine":239,"endColumn":34},{"ruleId":"228","severity":1,"message":"229","line":241,"column":32,"nodeType":"230","messageId":"231","endLine":241,"endColumn":34},{"ruleId":"219","severity":1,"message":"220","line":2,"column":26,"nodeType":"221","messageId":"222","endLine":2,"endColumn":35},{"ruleId":"215","severity":1,"message":"263","line":42,"column":6,"nodeType":"217","endLine":42,"endColumn":8,"suggestions":"264"},{"ruleId":"219","severity":1,"message":"220","line":2,"column":26,"nodeType":"221","messageId":"222","endLine":2,"endColumn":35},{"ruleId":"215","severity":1,"message":"265","line":42,"column":6,"nodeType":"217","endLine":42,"endColumn":8,"suggestions":"266"},{"ruleId":"219","severity":1,"message":"220","line":2,"column":26,"nodeType":"221","messageId":"222","endLine":2,"endColumn":35},{"ruleId":"215","severity":1,"message":"267","line":42,"column":6,"nodeType":"217","endLine":42,"endColumn":8,"suggestions":"268"},{"ruleId":"219","severity":1,"message":"227","line":1,"column":10,"nodeType":"221","messageId":"222","endLine":1,"endColumn":18},{"ruleId":"232","severity":1,"message":"233","line":35,"column":13,"nodeType":"234","endLine":40,"endColumn":15},"no-native-reassign",["269"],"no-negated-in-lhs",["270"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStats'. Either include it or remove the dependency array.","ArrayExpression",["271"],"no-unused-vars","'SearchBox' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["272"],"'setIsNotifierVisible' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useEffect has missing dependencies: 'bufferToImage', 'containerHandler', and 'options.images'. Either include them or remove the dependency array.",["273"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'containerHandler'. Either include it or remove the dependency array.",["274"],"React Hook useEffect has a missing dependency: 'getArticles'. Either include it or remove the dependency array.",["275"],"React Hook useEffect has a missing dependency: 'getImageExercises'. Either include it or remove the dependency array.",["276"],"React Hook useEffect has a missing dependency: 'getHalls'. Either include it or remove the dependency array.",["277"],"React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["278"],"'DataBox' is defined but never used.","'DeleteBox' is defined but never used.","'deleteOrder' is assigned a value but never used.","'addOrder' is assigned a value but never used.","'editOrder' is assigned a value but never used.","'setAddBoxVisible' is assigned a value but never used.","'editBoxVisible' is assigned a value but never used.","'deleteBoxVisible' is assigned a value but never used.","'orderObj' is assigned a value but never used.","'addFormRef' is assigned a value but never used.","'editFormRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array.",["279"],"React Hook useEffect has a missing dependency: 'getProteins'. Either include it or remove the dependency array.",["280"],"React Hook useEffect has a missing dependency: 'getPaymentMethods'. Either include it or remove the dependency array.",["281"],"React Hook useEffect has a missing dependency: 'getVideoExercises'. Either include it or remove the dependency array.",["282"],"no-global-assign","no-unsafe-negation",{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"291","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},"Update the dependencies array to be: [getStats]",{"range":"307","text":"308"},"Update the dependencies array to be: [getUsers]",{"range":"309","text":"310"},"Update the dependencies array to be: [bufferToImage, containerHandler, options.images]",{"range":"311","text":"312"},"Update the dependencies array to be: [containerHandler]",{"range":"313","text":"314"},"Update the dependencies array to be: [getArticles]",{"range":"315","text":"316"},"Update the dependencies array to be: [getImageExercises]",{"range":"317","text":"318"},"Update the dependencies array to be: [getHalls]",{"range":"319","text":"320"},"Update the dependencies array to be: [getProducts]",{"range":"321","text":"322"},"Update the dependencies array to be: [getOrders]",{"range":"323","text":"324"},"Update the dependencies array to be: [getProteins]",{"range":"325","text":"326"},"Update the dependencies array to be: [getPaymentMethods]",{"range":"327","text":"328"},"Update the dependencies array to be: [getVideoExercises]",{"range":"329","text":"330"},[521,523],"[getStats]",[837,839],"[getUsers]",[921,923],"[bufferToImage, containerHandler, options.images]",[273,275],"[containerHandler]",[990,992],"[getArticles]",[1069,1071],"[getImageExercises]",[1086,1088],"[getHalls]",[1031,1033],"[getProducts]",[940,942],"[getOrders]",[993,995],"[getProteins]",[1071,1073],"[getPaymentMethods]",[1069,1071],"[getVideoExercises]"]