[{"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\index.js":"1","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\App.js":"2","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\index.js":"3","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\LoginForm\\LoginForm.jsx":"4","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\index.js":"5","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Login\\Login.jsx":"6","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Stats\\Stats.jsx":"7","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Header\\Header.jsx":"8","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\providers\\index.js":"9","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\Users.jsx":"10","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Notifier\\Notifier.jsx":"11","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Table\\Table.jsx":"12","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DataBox\\DataBox.jsx":"13","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\hooks\\index.js":"14","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\SearchBox\\SearchBox.jsx":"15","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DeleteBox\\DeleteBox.jsx":"16","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\Articles.jsx":"17","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\hooks\\index.js":"18","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\ImageExercises.jsx":"19","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\hooks\\index.js":"20","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\TermsOfServices.js":"21","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PrivacyPolicy.js":"22"},{"size":455,"mtime":1611858746292,"results":"23","hashOfConfig":"24"},{"size":1466,"mtime":1615544210434,"results":"25","hashOfConfig":"24"},{"size":413,"mtime":1614162623402,"results":"26","hashOfConfig":"24"},{"size":2532,"mtime":1613687883210,"results":"27","hashOfConfig":"24"},{"size":417,"mtime":1615544128238,"results":"28","hashOfConfig":"24"},{"size":376,"mtime":1611836548198,"results":"29","hashOfConfig":"24"},{"size":2093,"mtime":1613725914551,"results":"30","hashOfConfig":"24"},{"size":10479,"mtime":1614428799015,"results":"31","hashOfConfig":"24"},{"size":1871,"mtime":1614429005526,"results":"32","hashOfConfig":"24"},{"size":9329,"mtime":1614418207633,"results":"33","hashOfConfig":"24"},{"size":973,"mtime":1613672214376,"results":"34","hashOfConfig":"24"},{"size":2933,"mtime":1614721508933,"results":"35","hashOfConfig":"24"},{"size":4603,"mtime":1614735825243,"results":"36","hashOfConfig":"24"},{"size":1968,"mtime":1614277984383,"results":"37","hashOfConfig":"24"},{"size":1060,"mtime":1614159720952,"results":"38","hashOfConfig":"24"},{"size":1448,"mtime":1614418878417,"results":"39","hashOfConfig":"24"},{"size":7148,"mtime":1614429274920,"results":"40","hashOfConfig":"24"},{"size":2204,"mtime":1614428937970,"results":"41","hashOfConfig":"24"},{"size":7778,"mtime":1614734701805,"results":"42","hashOfConfig":"24"},{"size":2466,"mtime":1614721661651,"results":"43","hashOfConfig":"24"},{"size":7663,"mtime":1615544428920,"results":"44","hashOfConfig":"24"},{"size":7656,"mtime":1615544435463,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1afk5ra",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\index.js",[],["98","99"],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\App.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\LoginForm\\LoginForm.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Login\\Login.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Stats\\Stats.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Header\\Header.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\providers\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\Users.jsx",["100"],"import { useState, useEffect } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useUsersHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Users = () => {\r\n  const { getUsers, deleteUser, addUser, editUser } = useUsersHook();\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [userObj, setUserObj] = useState({\r\n    _id: 0,\r\n    phoneNumber: \"\",\r\n    username: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirm: \"\",\r\n    role: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setUsers(await getUsers());\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setUserObj({\r\n        _id: 0,\r\n        phoneNumber: \"\",\r\n        username: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        passwordConfirm: \"\",\r\n        role: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const user = users.find((u) => u._id === _id);\r\n    delete user.password;\r\n    delete user.passwordConfirm;\r\n    setUserObj(user);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setUserObj(users.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف المستخدم رقم ${userObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteUser(userObj._id)) {\r\n            setUsers(users.filter((u) => u._id !== userObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة مستخدم جديد\",\r\n          onSave: async () => {\r\n            const user = await addUser(userObj);\r\n            if (user) {\r\n              setUsers([...users, user]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"رقم الهاتف\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"رقم الهاتف\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, phoneNumber: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"البريد الالكتروني\",\r\n            props: {\r\n              type: \"email\",\r\n              placeholder: \"البريد الالكتروني\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, email: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم المستخدم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"اسم المستخدم\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, username: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الاسم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"الاسم\",\r\n              onChange: (e) => setUserObj({ ...userObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, password: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"تأكيد كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"تأكيد كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, passwordConfirm: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"select\",\r\n            props: {\r\n              onChange: (e) => setUserObj({ ...userObj, role: e.target.value }),\r\n            },\r\n            options: [\r\n              {\r\n                label: \"المستوي\",\r\n                value: \"\",\r\n              },\r\n              {\r\n                label: \"مدير\",\r\n                value: \"admin\",\r\n              },\r\n              {\r\n                label: \"مستخدم\",\r\n                value: \"user\",\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل المستخدم رقم ${userObj._id}`,\r\n          onSave: async () => {\r\n            const user = await editUser(userObj);\r\n            if (user) {\r\n              setUsers(users.map((u) => (u._id === user._id ? user : u)));\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"رقم الهاتف\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"رقم الهاتف\",\r\n              value: userObj.phoneNumber,\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, phoneNumber: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"البريد الالكتروني\",\r\n            props: {\r\n              type: \"email\",\r\n              placeholder: \"البريد الالكتروني\",\r\n              value: userObj.email,\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, email: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"اسم المستخدم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"اسم المستخدم\",\r\n              value: userObj.username,\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, username: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الاسم\",\r\n            props: {\r\n              type: \"text\",\r\n              placeholder: \"الاسم\",\r\n              value: userObj.name,\r\n              onChange: (e) => setUserObj({ ...userObj, name: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, password: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"تأكيد كلمة المرور\",\r\n            props: {\r\n              type: \"password\",\r\n              placeholder: \"تأكيد كلمة المرور\",\r\n              onChange: (e) =>\r\n                setUserObj({ ...userObj, passwordConfirm: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"select\",\r\n            props: {\r\n              value: userObj.role,\r\n              onChange: (e) => setUserObj({ ...userObj, role: e.target.value }),\r\n            },\r\n            options: [\r\n              {\r\n                label: \"المستوي\",\r\n                value: \"\",\r\n              },\r\n              {\r\n                label: \"مدير\",\r\n                value: \"admin\",\r\n              },\r\n              {\r\n                label: \"مستخدم\",\r\n                value: \"user\",\r\n              },\r\n            ],\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>المستخدمين</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          <SearchBox />\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الاسم\",\r\n              \"البريد الالكتروني\",\r\n              \"اسم المستخدم\",\r\n              \"رقم الهاتف\",\r\n              \"المستوي\",\r\n              \"تاريخ التسجيل\",\r\n            ]}\r\n            data={\r\n              users &&\r\n              users.map((u) => [\r\n                u._id,\r\n                u.name,\r\n                u.email,\r\n                u.username,\r\n                u.phoneNumber,\r\n                u.role,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Notifier\\Notifier.jsx",["101"],"import { useEffect, useRef } from \"react\";\r\nimport { useNotifierContext } from \"../../providers\";\r\n\r\nconst Notifier = () => {\r\n  const { notifiers, setIsNotifierVisible } = useNotifierContext();\r\n\r\n  const alarmsRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.onload = (e) => {\r\n      alarmsRef.current.style.top = window.pageYOffset + 20 + \"px\";\r\n      window.addEventListener(\"scroll\", (e) => {\r\n        alarmsRef.current.style.top = window.pageYOffset + 20 + \"px\";\r\n      });\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"alarms\" ref={alarmsRef}>\r\n      {notifiers.errors &&\r\n        notifiers.errors.map((err, i) => (\r\n          <div key={i} className=\"alarm alarm-errors\">\r\n            {err}\r\n          </div>\r\n        ))}\r\n      {notifiers.success &&\r\n        notifiers.success.map((suc, i) => (\r\n          <div key={i} className=\"alarm alarm-success\">\r\n            {suc}\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifier;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\Table\\Table.jsx",["102","103","104","105","106","107"],"import { useEffect, useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Pagination, A11y } from \"swiper\";\r\n\r\n//Style\r\nimport \"./style.scss\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport \"swiper/components/scrollbar/scrollbar.scss\";\r\n\r\n//Assets\r\n//@ts-ignore\r\nimport TrashIcon from \"../../assets/img/trash.svg\";\r\n\r\nSwiperCore.use([Pagination, A11y]);\r\n\r\nconst Table = ({ headers, data, actions }) => {\r\n  return (\r\n    <div className=\"table-container\">\r\n      <div className=\"table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              {headers.length !== 0 &&\r\n                headers.map((head, i) => <th key={i}>{head}</th>)}\r\n              {actions && <th>الإجراء</th>}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data &&\r\n              data.length !== 0 &&\r\n              data.map((inputs, i) => (\r\n                <tr key={i}>\r\n                  {inputs.map((input) => (\r\n                    <td>\r\n                      {input && input.type == \"img\" ? (\r\n                        <img src={input.src} className=\"main-img\" />\r\n                      ) : input && input.type == \"slider\" ? (\r\n                        <Swiper\r\n                          spaceBetween={0}\r\n                          slidesPerView={1}\r\n                          pagination={{ clickable: true }}\r\n                        >\r\n                          {input.images.map((img) => (\r\n                            <SwiperSlide style={{ width: 160 }}>\r\n                              <img src={img} className=\"slider-img\" />\r\n                            </SwiperSlide>\r\n                          ))}\r\n                        </Swiper>\r\n                      ) : (\r\n                        input\r\n                      )}\r\n                    </td>\r\n                  ))}\r\n                  {actions && (\r\n                    <td className=\"action\">\r\n                      {actions.edit && (\r\n                        <button\r\n                          onClick={() => actions.edit(inputs[0])}\r\n                          className=\"btn-edit\"\r\n                        >\r\n                          تعديل\r\n                        </button>\r\n                      )}\r\n                      {actions.delete && (\r\n                        <img\r\n                          onClick={() => actions.delete(inputs[0])}\r\n                          src={TrashIcon}\r\n                          alt=\"حذف\"\r\n                          title=\"حذف\"\r\n                        />\r\n                      )}\r\n                    </td>\r\n                  )}\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"pagination\" data-update-function=\"searchForUsers\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DataBox\\DataBox.jsx",["108","109","110","111","112","113"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport SwiperCore, { Pagination, A11y } from \"swiper\";\r\n\r\n//Style\r\nimport \"./style.scss\";\r\nimport \"swiper/swiper.scss\";\r\nimport \"swiper/components/navigation/navigation.scss\";\r\nimport \"swiper/components/pagination/pagination.scss\";\r\nimport \"swiper/components/scrollbar/scrollbar.scss\";\r\n\r\nSwiperCore.use([Pagination, A11y]);\r\n\r\nconst DataBox = ({ options, inputs, visible, setVisible }) => {\r\n  const dataBoxRef = useRef(null);\r\n  const inputFileRef = useRef(null);\r\n\r\n  const [dataUrls, setDataUrls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", containerHandler);\r\n  }, []);\r\n\r\n  const containerHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (dataBoxRef.current && !dataBoxRef.current.contains(e.target)) {\r\n      setVisible(false);\r\n      setDataUrls([]);\r\n    }\r\n  };\r\n\r\n  const bufferToImage = () => {\r\n    setDataUrls([]);\r\n\r\n    console.log(dataUrls);\r\n    for (let i = 0; i < inputFileRef.current.files.length; i++) {\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(inputFileRef.current.files[i]);\r\n      reader.onload = () => {\r\n        setDataUrls([...dataUrls, reader.result]);\r\n      };\r\n    }\r\n  };\r\n\r\n  return (\r\n    visible && (\r\n      <div className=\"float-box-container\">\r\n        <div className=\"data-box\" ref={dataBoxRef}>\r\n          <div className=\"closing\" onClick={() => setVisible(false)}>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n          <form\r\n            method=\"POST\"\r\n            onSubmit={(e) => e.preventDefault()}\r\n            ref={options.formRef}\r\n          >\r\n            {options.title && <h3>{options.title}</h3>}\r\n            <div className=\"input-items\">\r\n              {inputs.length !== 0 &&\r\n                inputs.map((input, i) =>\r\n                  input.tag === \"input\" ? (\r\n                    <>\r\n                      <div className=\"input-item\">\r\n                        {input.label && <label>{input.label}</label>}\r\n                        <input\r\n                          {...input.props}\r\n                          ref={input.props.type == \"file\" ? inputFileRef : null}\r\n                          onChange={\r\n                            input.props.type == \"file\"\r\n                              ? bufferToImage\r\n                              : input.props.onChange\r\n                          }\r\n                        />\r\n                      </div>\r\n                      {input.props.type == \"file\" && dataUrls.length != 0 && (\r\n                        <div className=\"input-item\">\r\n                          <Swiper\r\n                            spaceBetween={0}\r\n                            slidesPerView={1}\r\n                            pagination={{ clickable: true }}\r\n                          >\r\n                            {dataUrls.map((url, i) => (\r\n                              <SwiperSlide>\r\n                                <img className=\"slider-img\" key={i} src={url} />\r\n                              </SwiperSlide>\r\n                            ))}\r\n                          </Swiper>\r\n                        </div>\r\n                      )}\r\n                    </>\r\n                  ) : input.tag === \"select\" ? (\r\n                    <div className=\"select-item\">\r\n                      <select {...input.props}>\r\n                        {input.options.map((option) => (\r\n                          <option value={option.value}>{option.label}</option>\r\n                        ))}\r\n                      </select>\r\n                      <span></span>\r\n                    </div>\r\n                  ) : input.tag === \"textarea\" ? (\r\n                    <div\r\n                      className=\"input-item\"\r\n                      style={{ alignItems: \"flex-start\" }}\r\n                    >\r\n                      {input.label && <label>{input.label}</label>}\r\n\r\n                      <textarea\r\n                        {...input.props}\r\n                        style={{ height: 250, minWidth: \"auto\" }}\r\n                      ></textarea>\r\n                    </div>\r\n                  ) : null\r\n                )}\r\n              <div className=\"input-item\">\r\n                <button\r\n                  className=\"save-btn\"\r\n                  type=\"submit\"\r\n                  onClick={options.onSave}\r\n                >\r\n                  {options.btnSave || \"حفظ\"}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\nexport default DataBox;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Users\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\SearchBox\\SearchBox.jsx",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\components\\DeleteBox\\DeleteBox.jsx",["114"],"import { useRef, useEffect } from \"react\";\r\n\r\n//Style\r\nimport \"./style.scss\";\r\n\r\nconst DeleteBox = ({ visible, setVisible, title, onDelete }) => {\r\n  const deleteBoxRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mouseup\", containerHandler);\r\n  }, []);\r\n\r\n  const containerHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (deleteBoxRef.current && !deleteBoxRef.current.contains(e.target)) {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    visible && (\r\n      <div className=\"float-box-container\">\r\n        <div className=\"delete-box\" ref={deleteBoxRef}>\r\n          <div className=\"closing\" onClick={() => setVisible(false)}>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n          <form method=\"POST\" onSubmit={(e) => e.preventDefault()}>\r\n            <input type=\"hidden\" name=\"id\" />\r\n            <h3>{title}</h3>\r\n            <div className=\"input-items\">\r\n              <div className=\"input-item\">\r\n                <button className=\"delete-btn\" type=\"submit\" onClick={onDelete}>\r\n                  حذف\r\n                </button>\r\n              </div>\r\n              <div className=\"input-item\">\r\n                <button className=\"abort-btn\" onClick={() => setVisible(false)}>\r\n                  الغاء\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default DeleteBox;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\Articles.jsx",["115"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useArticlesHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst Articles = () => {\r\n  const {\r\n    getArticles,\r\n    deleteArticle,\r\n    addArticle,\r\n    editArticle,\r\n  } = useArticlesHook();\r\n\r\n  const [articles, setArticles] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [articleObj, setArticleObj] = useState({\r\n    _id: 0,\r\n    title: \"\",\r\n    content: \"\",\r\n    mainImage: \"\",\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getArticles();\r\n\r\n      if (result) {\r\n        setArticles(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setArticleObj({\r\n        _id: 0,\r\n        title: \"\",\r\n        content: \"\",\r\n        mainImage: \"\",\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const article = articles.find((u) => u._id === _id);\r\n    setArticleObj(article);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setArticleObj(articles.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف المقالة رقم ${articleObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteArticle(articleObj._id)) {\r\n            setArticles(articles.filter((u) => u._id !== articleObj._id));\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة مقال جديد\",\r\n          onSave: async () => {\r\n            const article = await addArticle(addFormRef);\r\n            if (article) {\r\n              setArticles([...articles, article]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"title\",\r\n              maxLength: 100,\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, content: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"mainImage\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, mainImage: e.target.files[0] }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل المستخدم رقم ${articleObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editArticle(editFormRef);\r\n            if (result) {\r\n              setArticles(\r\n                articles.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: articleObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: articleObj.title,\r\n              name: \"title\",\r\n              placeholder: \"عنوان المقال\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, title: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي المقال\",\r\n            props: {\r\n              type: \"text\",\r\n              value: articleObj.content,\r\n              name: \"content\",\r\n              placeholder: \"محتوي المقال\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setArticleObj({ ...articleObj, content: e.target.value }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصورة المصغرة\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              placeholder: \"الصورة المصغرة\",\r\n              name: \"mainImage\",\r\n              onChange: (e) =>\r\n                setArticleObj({\r\n                  ...articleObj,\r\n                  mainImage: URL.createObjectURL(e.target.files[0]),\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>المقالات</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          <SearchBox />\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الصورة المصغرة\",\r\n              \"عنوان المقال\",\r\n              \"محتوي المقال\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              articles &&\r\n              articles.map((u) => [\r\n                u._id,\r\n                { type: \"img\", src: u.mainImage },\r\n                u.title,\r\n                u.content,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Articles;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\Articles\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\ImageExercises.jsx",["116"],"import { useState, useEffect, useRef } from \"react\";\r\nimport { Table, DataBox, SearchBox, DeleteBox } from \"../../components\";\r\n\r\n//Hooks\r\nimport useImageExercisesHook from \"./hooks/index\";\r\n\r\n//Styles\r\nimport \"./style.scss\";\r\n\r\nconst ImageExercises = () => {\r\n  const {\r\n    getImageExercises,\r\n    deleteImageExercise,\r\n    addImageExercise,\r\n    editImageExercise,\r\n  } = useImageExercisesHook();\r\n\r\n  const [imageExercises, setImageExercises] = useState([]);\r\n  const [addBoxVisible, setAddBoxVisible] = useState(false);\r\n  const [editBoxVisible, setEditBoxVisible] = useState(false);\r\n  const [deleteBoxVisible, setDeleteBoxVisible] = useState(false);\r\n\r\n  const [imageExerciseObj, setImageExerciseObj] = useState({\r\n    _id: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    images: [],\r\n    createDate: \"\",\r\n  });\r\n\r\n  const addFormRef = useRef(null);\r\n  const editFormRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const result = await getImageExercises();\r\n\r\n      if (result) {\r\n        setImageExercises(result);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (addBoxVisible)\r\n      setImageExerciseObj({\r\n        _id: 0,\r\n        title: \"\",\r\n        description: \"\",\r\n        images: [],\r\n        createDate: \"\",\r\n      });\r\n  }, [addBoxVisible]);\r\n\r\n  const onClickEdit = (_id) => {\r\n    const imageExercise = imageExercises.find((u) => u._id === _id);\r\n    setImageExerciseObj(imageExercise);\r\n    setEditBoxVisible(true);\r\n  };\r\n  const onClickDelete = (_id) => {\r\n    setImageExerciseObj(imageExercises.find((u) => u._id === _id));\r\n    setDeleteBoxVisible(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DeleteBox\r\n        visible={deleteBoxVisible}\r\n        setVisible={setDeleteBoxVisible}\r\n        title={`حذف التمرين رقم ${imageExerciseObj._id}`}\r\n        onDelete={async () => {\r\n          if (await deleteImageExercise(imageExerciseObj._id)) {\r\n            setImageExercises(\r\n              imageExercises.filter((u) => u._id !== imageExerciseObj._id)\r\n            );\r\n            setDeleteBoxVisible(false);\r\n          }\r\n        }}\r\n      />\r\n      <DataBox\r\n        visible={addBoxVisible}\r\n        setVisible={setAddBoxVisible}\r\n        options={{\r\n          title: \"اضافة تمرين جديد\",\r\n          onSave: async () => {\r\n            const imageExercise = await addImageExercise(addFormRef);\r\n            if (imageExercise) {\r\n              setImageExercises([...imageExercises, imageExercise]);\r\n              setAddBoxVisible(false);\r\n            }\r\n          },\r\n          btnSave: \"اضافة\",\r\n          formRef: addFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان التمرين\",\r\n\r\n            props: {\r\n              type: \"text\",\r\n              name: \"title\",\r\n              maxLength: 100,\r\n              placeholder: \"عنوان التمرين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  title: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              name: \"description\",\r\n              placeholder: \"محتوي التمرين\",\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصور\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              name: \"images\",\r\n              placeholder: \"الصور\",\r\n              multiple: true,\r\n              required: true,\r\n\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  images: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <DataBox\r\n        visible={editBoxVisible}\r\n        setVisible={setEditBoxVisible}\r\n        options={{\r\n          title: `تعديل التمرين رقم ${imageExerciseObj._id}`,\r\n          onSave: async () => {\r\n            const result = await editImageExercise(editFormRef);\r\n            if (result) {\r\n              setImageExercises(\r\n                imageExercises.map((u) => (u._id === result._id ? result : u))\r\n              );\r\n              setEditBoxVisible(false);\r\n            }\r\n          },\r\n          saveBtn: \"تعديل\",\r\n          formRef: editFormRef,\r\n        }}\r\n        inputs={[\r\n          {\r\n            tag: \"input\",\r\n            props: {\r\n              type: \"hidden\",\r\n              value: imageExerciseObj._id,\r\n              name: \"_id\",\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"عنوان التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: imageExerciseObj.title,\r\n              name: \"title\",\r\n              placeholder: \"عنوان التمرين\",\r\n              required: true,\r\n              maxLength: 100,\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  title: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"textarea\",\r\n            label: \"محتوي التمرين\",\r\n            props: {\r\n              type: \"text\",\r\n              value: imageExerciseObj.description,\r\n              name: \"description\",\r\n              placeholder: \"محتوي التمرين\",\r\n              required: true,\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  description: e.target.value,\r\n                }),\r\n            },\r\n          },\r\n          {\r\n            tag: \"input\",\r\n            label: \"الصور\",\r\n            props: {\r\n              type: \"file\",\r\n              accept: \".jpg, .png, .jpeg\",\r\n              multiple: true,\r\n              placeholder: \"الصور\",\r\n              name: \"images\",\r\n              onChange: (e) =>\r\n                setImageExerciseObj({\r\n                  ...imageExerciseObj,\r\n                  images: e.target.files,\r\n                }),\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <div className=\"main-container\">\r\n        <div className=\"page-position\">\r\n          <h2>لوحة التحكم</h2>\r\n          <p>/</p>\r\n          <h6>تمارين رياضية (صور)</h6>\r\n        </div>\r\n        <div className=\"container\">\r\n          <SearchBox />\r\n          <div className=\"add-new\">\r\n            <button\r\n              className=\"btn-add-new\"\r\n              onClick={() => setAddBoxVisible(true)}\r\n            >\r\n              أضف جديد\r\n            </button>\r\n          </div>\r\n          <Table\r\n            actions={{\r\n              edit: onClickEdit,\r\n              delete: onClickDelete,\r\n            }}\r\n            headers={[\r\n              \"#\",\r\n              \"الصور\",\r\n              \"العنوان\",\r\n              \"محتوي التمرينة\",\r\n              \"تاريخ الإضافة\",\r\n            ]}\r\n            data={\r\n              imageExercises &&\r\n              imageExercises.map((u) => [\r\n                u._id,\r\n                { type: \"slider\", images: u.images },\r\n                u.title,\r\n                u.description,\r\n                u.createDate,\r\n              ])\r\n            }\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageExercises;\r\n","W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\ImageExercises\\hooks\\index.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\TermsOfServices.js",[],"W:\\Free Lancing\\احمد مثني - مستقل\\tamreny-api\\client\\src\\screens\\PrivacyPolicy.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":33,"column":6,"nodeType":"123","endLine":33,"endColumn":8,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":5,"column":22,"nodeType":"127","messageId":"128","endLine":5,"endColumn":42},{"ruleId":"125","severity":1,"message":"129","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":19},{"ruleId":"125","severity":1,"message":"130","line":1,"column":21,"nodeType":"127","messageId":"128","endLine":1,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":37,"column":44,"nodeType":"133","messageId":"134","endLine":37,"endColumn":46},{"ruleId":"135","severity":1,"message":"136","line":38,"column":25,"nodeType":"137","endLine":38,"endColumn":69},{"ruleId":"131","severity":1,"message":"132","line":39,"column":47,"nodeType":"133","messageId":"134","endLine":39,"endColumn":49},{"ruleId":"135","severity":1,"message":"136","line":47,"column":31,"nodeType":"137","endLine":47,"endColumn":71},{"ruleId":"121","severity":1,"message":"138","line":22,"column":6,"nodeType":"123","endLine":22,"endColumn":8,"suggestions":"139"},{"ruleId":"131","severity":1,"message":"132","line":69,"column":49,"nodeType":"133","messageId":"134","endLine":69,"endColumn":51},{"ruleId":"131","severity":1,"message":"132","line":71,"column":46,"nodeType":"133","messageId":"134","endLine":71,"endColumn":48},{"ruleId":"131","severity":1,"message":"132","line":77,"column":41,"nodeType":"133","messageId":"134","endLine":77,"endColumn":43},{"ruleId":"131","severity":1,"message":"140","line":77,"column":70,"nodeType":"133","messageId":"134","endLine":77,"endColumn":72},{"ruleId":"135","severity":1,"message":"136","line":86,"column":33,"nodeType":"137","endLine":86,"endColumn":81},{"ruleId":"121","severity":1,"message":"138","line":11,"column":6,"nodeType":"123","endLine":11,"endColumn":8,"suggestions":"141"},{"ruleId":"121","severity":1,"message":"142","line":42,"column":6,"nodeType":"123","endLine":42,"endColumn":8,"suggestions":"143"},{"ruleId":"121","severity":1,"message":"144","line":42,"column":6,"nodeType":"123","endLine":42,"endColumn":8,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.","ArrayExpression",["148"],"no-unused-vars","'setIsNotifierVisible' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'containerHandler'. Either include it or remove the dependency array.",["149"],"Expected '!==' and instead saw '!='.",["150"],"React Hook useEffect has a missing dependency: 'getArticles'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'getImageExercises'. Either include it or remove the dependency array.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"155","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [getUsers]",{"range":"162","text":"163"},"Update the dependencies array to be: [containerHandler]",{"range":"164","text":"165"},{"range":"166","text":"165"},"Update the dependencies array to be: [getArticles]",{"range":"167","text":"168"},"Update the dependencies array to be: [getImageExercises]",{"range":"169","text":"170"},[837,839],"[getUsers]",[712,714],"[containerHandler]",[273,275],[990,992],"[getArticles]",[1069,1071],"[getImageExercises]"]